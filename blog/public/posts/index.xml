<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on /* Commentary */</title>
    <link>/posts/</link>
    <description>Recent content in Posts on /* Commentary */</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 May 2023 22:47:06 -0700</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explaining the `EXPLAIN`</title>
      <link>/posts/explain-statement/</link>
      <pubDate>Sat, 06 May 2023 22:47:06 -0700</pubDate>
      
      <guid>/posts/explain-statement/</guid>
      <description>When using an relational database management system (RDBMS), also called a &amp;ldquo;relational database&amp;rdquo; or &amp;ldquo;SQL database&amp;rdquo;, it&amp;rsquo;s only a matter of time before you want to gain more insight into the performance of a subset of your queries. These databases are equipped with the ability for engineers to examine how the queries are planned to be executed, referred to as a &amp;ldquo;query execution plan&amp;rdquo;, and in some cases, able to compare that plan to what actually occurred when the query is run.</description>
      <content>&lt;p&gt;When using an relational database management system (RDBMS), also called a
&amp;ldquo;relational database&amp;rdquo; or &amp;ldquo;SQL database&amp;rdquo;, it&amp;rsquo;s only a matter of time before
you want to gain more insight into the performance of a subset of your queries.
These databases are equipped with the ability for engineers to examine how the
queries are planned to be executed, referred to as a &amp;ldquo;query execution plan&amp;rdquo;,
and in some cases, able to compare that plan to what actually occurred when
the query is run.&lt;/p&gt;
&lt;p&gt;This process of asking the database to provide these insights is technically
referred to as &amp;ldquo;explaining&amp;rdquo; or &amp;ldquo;describing&amp;rdquo; the query, and commonly utilize
the keyword &lt;code&gt;EXPLAIN&lt;/code&gt; to invoke that process.&lt;/p&gt;
&lt;h2 id=&#34;explain-statement&#34;&gt;&lt;code&gt;EXPLAIN&lt;/code&gt; Statement&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;code&gt;EXPLAIN&lt;/code&gt; statement supported by various relational databases exposes
how the the database plans on executing the query provided to it. It can be
used to gain these insights on most query statement types, such as &lt;code&gt;SELECT&lt;/code&gt;,
&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and potentially more, but in practice is mainly
used with &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️  The component within a relational database responsible for
determinining the query execution plan is often called the &amp;ldquo;optimizer&amp;rdquo; or
&amp;ldquo;planner&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When providing the &lt;code&gt;EXPLAIN&lt;/code&gt; statement with a query, that query is not actually
executed. Instead, the query execution plan that would have been used is
retrieved and provided in the output. This is helpful to know, because queries
that have been known to be problematic and utilize a large portion of system
resources can be safely specified to &lt;code&gt;EXPLAIN&lt;/code&gt; without the side-effects
caused by actually executing that query.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠️ Most relational databases require that you have permissions to run
the query provided to &lt;code&gt;EXPLAIN&lt;/code&gt;, and a subset have an explicit permission
associated to the &lt;code&gt;EXPLAIN&lt;/code&gt; command. Make sure you have the proper permissions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;example-syntax&#34;&gt;Example Syntax&lt;/h3&gt;
&lt;p&gt;Although various relational databases have differing alternative syntaxes
and options that can be provided to further refine how &lt;code&gt;EXPLAIN&lt;/code&gt; behaves,
most support a common (canonical) syntax. The examples laid out here
demonstrate both the common and alternative syntaxes for several popular
relational databases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;FUN FACT&lt;/strong&gt;: The cited relational databases together represent &lt;code&gt;97.96%&lt;/code&gt;
market share; PostgreSQL has &lt;a href=&#34;https://6sense.com/tech/relational-databases/postgresql-market-share&#34;&gt;&lt;code&gt;17.32%&lt;/code&gt;&lt;/a&gt;, MySQL has
&lt;a href=&#34;https://6sense.com/tech/relational-databases/mysql-market-share&#34;&gt;&lt;code&gt;44.68%&lt;/code&gt;&lt;/a&gt;, SQLite has &lt;a href=&#34;https://6sense.com/tech/relational-databases/sqlite-market-share&#34;&gt;&lt;code&gt;3.32%&lt;/code&gt;&lt;/a&gt;,
and SQL Server has &lt;a href=&#34;https://6sense.com/tech/database/microsoft-sql-server-market-share&#34;&gt;&lt;code&gt;32.64%&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;PostgreSQL&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
-- canonical syntax.
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: PostgreSQL supports a vast array of options that can provided to
&lt;code&gt;EXPLAIN&lt;/code&gt;, such as &lt;code&gt;VERBOSE&lt;/code&gt;, &lt;code&gt;COSTS&lt;/code&gt;, &lt;code&gt;BUFFERS&lt;/code&gt;, &lt;code&gt;WAL&lt;/code&gt;, etc. For more
information on these options, check out &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-explain.html&#34;&gt;this&lt;/a&gt;
documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;mysql&#34;&gt;MySQL&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;MySQL&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
-- canonical syntax.
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;

-- alternative syntax.
DESCRIBE SELECT name FROM players WHERE players.games_played &amp;gt; 10;

-- alternative syntax.
DESC SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h4 id=&#34;sqlite&#34;&gt;SQLite&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;3&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;3&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;SQLite&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
-- canonical syntax.
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;

-- alternative syntax.
EXPLAIN QUERY PLAN SELECT name FROM players WHERE players.games_played &amp;gt; 10;

&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h4 id=&#34;sql-server&#34;&gt;SQL Server&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;4&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;4&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;SQL Server&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
-- canonical syntax.
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: SQL Server supports a &lt;code&gt;WITH_RECOMMENDATIONS&lt;/code&gt; option, which results in
the output containing recommendations to optimize the provided query. For more
information on this option, check out &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/t-sql/queries/explain-transact-sql?view=azure-sqldw-latest#with_recommendations&#34;&gt;this&lt;/a&gt;
documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;output&#34;&gt;Output&lt;/h3&gt;
&lt;p&gt;Now that we know how to issue the &lt;code&gt;EXPLAIN&lt;/code&gt; statement, it&amp;rsquo;s time to dive into
the output. In contrast to the common syntax across various relational databases,
the output format, along with the level of configurability of that format,
deviates significantly.&lt;/p&gt;
&lt;h4 id=&#34;postgresql-1&#34;&gt;PostgreSQL&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;PostgreSQL&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h4 id=&#34;mysql-1&#34;&gt;MySQL&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;MySQL&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h4 id=&#34;sqlite-1&#34;&gt;SQLite&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;3&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;3&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;SQLite&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h4 id=&#34;sql-server-1&#34;&gt;SQL Server&lt;/h4&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;4&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;4&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;SQL Server&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
EXPLAIN SELECT name FROM players WHERE players.games_played &amp;gt; 10;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h2 id=&#34;when-should-i-use-explain&#34;&gt;When should I use &lt;code&gt;EXPLAIN&lt;/code&gt;?&lt;/h2&gt;
&lt;h2 id=&#34;comparing-plans-with-actual&#34;&gt;Comparing plans with actual&lt;/h2&gt;
&lt;h2 id=&#34;any-tools-to-help-me-read-the-output&#34;&gt;Any tools to help me read the output?&lt;/h2&gt;
&lt;p&gt;OUTLINE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what circumstances would lead to you wanting to use &lt;code&gt;EXPLAIN&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;what is &lt;code&gt;EXPLAIN&lt;/code&gt;?
&lt;ul&gt;
&lt;li&gt;talk about how it is an estimate.&lt;/li&gt;
&lt;li&gt;what is a query execution plan?&lt;/li&gt;
&lt;li&gt;what is the optimizer?&lt;/li&gt;
&lt;li&gt;can be used with other things besides &lt;code&gt;SELECT&lt;/code&gt;, but let&amp;rsquo;s focus on that.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;what does the output look like?
&lt;ul&gt;
&lt;li&gt;MySQL?&lt;/li&gt;
&lt;li&gt;SQLLite?&lt;/li&gt;
&lt;li&gt;PostgreSQL?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;what about &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;?
&lt;ul&gt;
&lt;li&gt;talk about how it actually runs the query and compares.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;optimizer hints?&lt;/li&gt;
&lt;li&gt;what does the output mean?&lt;/li&gt;
&lt;li&gt;example of how &lt;code&gt;EXPLAIN&lt;/code&gt; output can help improve query performance.
&lt;ul&gt;
&lt;li&gt;create tables related to hockey:
&lt;ul&gt;
&lt;li&gt;players
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;position&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;teams
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;players_teams
&lt;ul&gt;
&lt;li&gt;player_id&lt;/li&gt;
&lt;li&gt;team_id&lt;/li&gt;
&lt;li&gt;season_id&lt;/li&gt;
&lt;li&gt;games_played&lt;/li&gt;
&lt;li&gt;icetime&lt;/li&gt;
&lt;li&gt;shifts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;season
&lt;ul&gt;
&lt;li&gt;year&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RESOURCES&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/sql-explain.html&#34;&gt;https://www.postgresql.org/docs/current/sql-explain.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/using-explain.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/using-explain.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/explain.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/explain.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/eqp.html&#34;&gt;https://www.sqlite.org/eqp.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/optoverview.html&#34;&gt;https://www.sqlite.org/optoverview.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/planner-optimizer.html&#34;&gt;https://www.postgresql.org/docs/current/planner-optimizer.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/controlling-query-plan-evaluation.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/controlling-query-plan-evaluation.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/sql/t-sql/queries/explain-transact-sql?view=azure-sqldw-latest&#34;&gt;https://learn.microsoft.com/en-us/sql/t-sql/queries/explain-transact-sql?view=azure-sqldw-latest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Perhaps you noticed a slow query when developing a new feature, or maybe
there is application timing out in your production environment. May&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Etags: The Secret Sauce to Scalable &amp; Concurrent APIs</title>
      <link>/posts/etags/</link>
      <pubDate>Sat, 08 Apr 2023 10:35:13 -0700</pubDate>
      
      <guid>/posts/etags/</guid>
      <description>If you are a software engineer in the web development space, I&amp;rsquo;m willing to wager you have at least familiarized yourself with entity tags, or &amp;ldquo;etags&amp;rdquo; for short. However, not many have fully seized the various opportunities etags provide when implementing RESTful, HTTP-based APIs.
Incidentally I have become somewhat passionate about etags and their applied usage as I&amp;rsquo;ve continued through my career. They are often a critical necessity that gets overlooked when building scalable, concurrent systems for the web.</description>
      <content>&lt;p&gt;If you are a software engineer in the web development space, I&amp;rsquo;m willing to
wager you have at least familiarized yourself with entity tags, or &amp;ldquo;etags&amp;rdquo; for
short. However, not many have fully seized the various opportunities etags
provide when implementing RESTful, HTTP-based APIs.&lt;/p&gt;
&lt;p&gt;Incidentally I have become somewhat passionate about etags and
their applied usage as I&amp;rsquo;ve continued through my career. They are often a
critical necessity that gets overlooked when building scalable, concurrent
systems for the web. Having knowledge of what they are and how to use them
will serve you well by ultimately empowering you and others alongside you to
build robust APIs that maintain resource integrity and can scale read flows
to great volumes.&lt;/p&gt;
&lt;h2 id=&#34;wtf-are-etags&#34;&gt;WTF are etags?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;An entity tag is an opaque validator for differentiating between multiple
representations of the same resource, regardless of whether those multiple
representations are due to resource state changes over time, content
negotiation resulting in multiple representations being valid at the same
time, or both. - &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc7232#section-2.3&#34;&gt;RFC 7232 Section 2.3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In other words, an entity tag is indicative of a particular state or &amp;ldquo;version&amp;rdquo;
of resource state communicated via a representation. Any time the
representation for the resource changes, the corresponding entity tag will
change. These entity tags are communicated via the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag&#34;&gt;&lt;code&gt;Etag&lt;/code&gt; header&lt;/a&gt; in HTTP
responses.&lt;/p&gt;
&lt;p&gt;Now that we know what they are, it&amp;rsquo;s time to get a little more concrete. After
all, what does one of these look like?&lt;/p&gt;
&lt;p&gt;An entity tag consists of two main sections: an optional weakness identifier
(if the entity tag is a weak entity tag; more on that shortly), and a series
of &lt;a href=&#34;https://en.wikipedia.org/wiki/ASCII&#34;&gt;ASCII encoded&lt;/a&gt; characters surrounded by double (&lt;code&gt;&amp;quot;&lt;/code&gt;) quotes. The
second portion is often referred to as an &amp;ldquo;opaque string&amp;rdquo;, &amp;ldquo;opaque validator&amp;rdquo;,
or &amp;ldquo;entity tag value&amp;rdquo;, simply meaning it&amp;rsquo;s an abstract sequence of characters
typically without descernable or ulterior meaning.&lt;/p&gt;
&lt;h3 id=&#34;strong&#34;&gt;Strong&lt;/h3&gt;
&lt;p&gt;Stating that an entity tag is a &amp;ldquo;strong entity tag&amp;rdquo; really means that the
entity tag should be used to perform &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests#strong_validation&#34;&gt;strong validation&lt;/a&gt;. Strong validation
is used to determine whether two representations of a resource are byte for byte
identical. This strict form of validation is required for a subset of
conditional HTTP headers, and in general provides the highest level of
confidence that the data being compared is equivalent.&lt;/p&gt;
&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&amp;#34;e6139f93eb47c9fe7eb7fc5ddb586511&amp;#34;
&amp;#34;3b6f421e7550395e28e091c5565ac80a&amp;#34;
&amp;#34;00a809937eddc44521da9521269e75c6&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;weak&#34;&gt;Weak&lt;/h3&gt;
&lt;p&gt;Contrasting with strong entity tags, a weak entity tag refers to one that
leverages &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests#weak_validation&#34;&gt;weak validation&lt;/a&gt;. This form of validation does not assert byte for
byte equality, and instead relies on determining whether the two
representations are semantically equivalent. This relies on the engineer to
define these semantics. A weak entity tag is designated by
adding a &lt;code&gt;W/&lt;/code&gt; prefix to the entity tag value.&lt;/p&gt;
&lt;h4 id=&#34;examples-1&#34;&gt;Examples&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;W/&amp;#34;2b00042f7481c7b056c4b410d28f33cf&amp;#34;
W/&amp;#34;4ecc28c187a45859e7631bb871a41a7d&amp;#34;
W/&amp;#34;28198b369067e88dab9fefe85484dbf4&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;which-type-should-i-use&#34;&gt;Which Type Should I Use?&lt;/h2&gt;
&lt;p&gt;Based on my experience and systems I&amp;rsquo;ve built over the years, I recommend
using &lt;strong&gt;strong etags&lt;/strong&gt;. In the next section, I&amp;rsquo;ll go into more detail on how
entity tags can be generated, but in general, strong entity tags are typically simpler
to generate from a coding perspective. Additionally, they leave the door
open for your API to support conditional request behaviors that rely on byte
for byte equality, such as &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Range&#34;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt;, which can be used to request a portion
of a resource representation. They are easier to reason about given
their generation algorithms are well known, documented, and widely available. Lastly,
they gracefully support content negotiation use cases given different
negotiated representations will natively have different content.&lt;/p&gt;
&lt;p&gt;That said, it&amp;rsquo;s worth highlighting the most prominent downside:
the slightest difference results in a different entity tag, even if the
data being conveyed in the representation is the same.&lt;/p&gt;
&lt;p&gt;For example, if your representations leverage a data exchange format such as &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt;,
any changes to the ordering of the keys would result in a mismatch. Perhaps your
representation contains a collection or list; if the ordering of the elements
is different, again the entity tags will not match. Such fragility is as
burdensome as is the ability to tame these occurrences. For example, if you
can easily ensure JSON keys are serialized in a consistent order, that lists
are serialized in a consistent order, etc. than you should be able to safely
avoid unintended mismatches.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Some web frameworks already take liberties in how data is serialized
that help ensure the process is deterministic. For example, it&amp;rsquo;s common to see
serialization functionality be implemented such that it sorts JSON keys in
alphabetical order. As such, the fragility described above is typically
already handled to some degree from the start.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;how-should-i-generate-them&#34;&gt;How Should I Generate Them?&lt;/h2&gt;
&lt;p&gt;Mechanically, entity tags are typically generated using well known, one-way
hashing algorithms such as &lt;a href=&#34;https://en.wikipedia.org/wiki/MD5&#34;&gt;MD5&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/SHA-2&#34;&gt;SHA256&lt;/a&gt;.
The input to the hashing algorithm hinges on whether strong or weak validation
is desired.&lt;/p&gt;
&lt;p&gt;When generating strong entity tags, the input is the serialized
representation. In other words, all of the bytes that comprise the
representation to be returned in a response to a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET&#34;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; request for the resource
are what ultimately gets hashed.&lt;/p&gt;
&lt;p&gt;On the flip side, if weak validation is desired, you as the engineer have to
define what data is used as input. For example, perhaps only a subset of the
data items returned in a representation need to be considered - this could
be accomplished by serializing just those properties and using that result as input.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You may also see or hear the term &amp;lsquo;variant&amp;rsquo; used interchageably with
&amp;lsquo;representation&amp;rsquo;. Some web frameworks use this terminology as well in their
code. Within the context of this article, you can assume they are synonymous
with one another.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s important to reiterate that entity tags should be generated for each
representation for a resource, such that different representations for that
resource can be properly distinguished. This includes &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation&#34;&gt;content negotiation&lt;/a&gt;
as well.&lt;/p&gt;
&lt;p&gt;If your HTTP API supports content negotiation, make sure that you are capable
of generating entity tags such that they factor in the variants your API supports.
For generating entity tags that support strong validation, this should be supported
out of the box. Representations that differ in language, encoding, or media type
will be comprised of different bytes. When generating entity tags that use
weak validation, these negotiable characteristics of each variant should
be used as input in combination with the semantics already put in place to
generate the entity tag.&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;Although various request flows that leverage entity tags can operate completely
without storing entity tags and compute them on the fly prior to usage, I strongly
urge that you consider storing them. In absence of storing them, the
origin server basically needs to reconstitute the resource and serialize it
to determine what the current relevant entity tag is which
is costly. Additionally, data store technologies provide affordances that
can help ensure race conditions are handled gracefully.&lt;/p&gt;
&lt;h3 id=&#34;considerations&#34;&gt;Considerations&lt;/h3&gt;
&lt;p&gt;There are some key considerations to weigh when choosing to store entity tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the event your API supports content negotiation, you will need to store the
dimensions of negotiation along with your entity tags such that the correct
one is selected. Examples of dimensions are media type, language, and encoding.&lt;/li&gt;
&lt;li&gt;You will need to use optimistic concurrency controls. Check to see if your database
of choice or web framework supports optimistic concurrency out of the box. If not,
your API will need to implement this.&lt;/li&gt;
&lt;li&gt;The metadata utilized for the optimistic concurrency control algorithm should
be stored directly with the entity tags. In other words,
judge whether the resource change in progress should pass or fail based on whether
a concurrent change to the stored entity tag has occurred.&lt;/li&gt;
&lt;li&gt;Entity tags should be generated within the same transaction as the resource
creation or modification operation. If your data store doesn&amp;rsquo;t support explicit
transactions, I&amp;rsquo;d suggest creating a separate &amp;ldquo;view&amp;rdquo; of the resource state such
that it is all consolidated into one location. For example, if using a document
database, you could denormalize all resource state into
a single document. This way, all data used as input for the entity tag is
consolidated. This creates a single pathway of change that can be used to trigger
new entity tag creation, and optimistic concurrency control can be used to ensure
that a concurrent change has not occurred.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-relational-db&#34;&gt;Example (Relational DB)&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s assume we are using a relational database solution such as &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; or
&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;. Since these solutions offer support for transactions we could
create a separate &lt;code&gt;entity_tags&lt;/code&gt; table to store our entity tags. We then would
issue &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; SQL statements to this table within the same
transaction as the resource state changes.&lt;/p&gt;
&lt;p&gt;New table; ✅. We next need to decide what
data this table should store. The following are various data items we could
add to the schema of this table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Data Item&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The URI of the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;media_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/MIME&#34;&gt;MIME&lt;/a&gt; media type of the representation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;language&lt;/code&gt;*&lt;/td&gt;
&lt;td&gt;The language of the representation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;encodings&lt;/code&gt;*&lt;/td&gt;
&lt;td&gt;The encodings of the representation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;etag&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The entity tag.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version column utilized to support optimistic concurrency.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; = Data item may not be required; depends on the dimensions available for content negotiation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s get to it! We could achieve the above with something similar to the following SQL:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
CREATE TABLE entity_tags
  (
     uri        VARCHAR NOT NULL,
     media_type VARCHAR NOT NULL,
     language   VARCHAR NOT NULL,
     encodings  VARCHAR NOT NULL,
     etag       VARCHAR NOT NULL,
     version    INTEGER NOT NULL,

     PRIMARY KEY (uri, media_type, language, encodings)
  ); 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Within this table in place, some examples of records in this table could look
like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;media_type&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;language&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;etag&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;version&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;8afc1e9bec810034dafd45c6854f1dd9&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;87a1ca13ae46d84174ee2b607f03e36d&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fr-CA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;a4bef372fd7a743fb81ead93498ce414&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fr-CA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;937de310a05a530fa4c802d802020fdb&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;26e28f0c78c13daad592c8977afca45e&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;5d83f25b2cb0df85c52620eda1031e2c&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;57d4cc6b026949a45688c6352d88d023&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fr-CA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;337943905ca0bfe204b69eab51fff1a8&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fr-CA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;48dd5c5c560dabcf685899e0b2a5d866&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/examples/2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/vnd.example+yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;6833d9d1ce9ec568f370572f6e029425&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;scaling-reads&#34;&gt;Scaling Reads&lt;/h2&gt;
&lt;p&gt;The most popular application of entity tags is to help scale API read operations,
such as &lt;code&gt;GET&lt;/code&gt; requests. This is achieved using what is referred to as
&amp;ldquo;conditional&amp;rdquo; &lt;code&gt;GET&lt;/code&gt; requests.&lt;/p&gt;
&lt;h3 id=&#34;conditional-get&#34;&gt;Conditional &lt;code&gt;GET&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Any request is classified as conditional if it provides any of these
conditional headers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match&#34;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match&#34;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since&#34;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Unmodified-Since&#34;&gt;&lt;code&gt;If-Unmodified-Since&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Range&#34;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More specifically, conditional &lt;code&gt;GET&lt;/code&gt; requests most often utilize either the
&lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt; headers. Since we are mainly focusing
on entity tags in this dicussion, we&amp;rsquo;ll focus just on &lt;code&gt;If-None-Match&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the context of conditional &lt;code&gt;GET&lt;/code&gt; requests, the &lt;code&gt;If-None-Match&lt;/code&gt; header
is used as a way for a client to conditionally request a fresh representation
for a resource only if that resource has an entity tag &lt;em&gt;that does not match&lt;/em&gt;
any of the entity tags provided within the value of the header. The format
of that header looks like the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;If-None-Match: &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;
If-None-Match: &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;, &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;, …
If-None-Match: *
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HTTP clients (as well as intermediary hosts such as proxies) often maintain
caches that store responses to previous requests. Those clients maintain that
cache, and expiration of the entries are primarily controlled by the value
of the &lt;code&gt;Cache-Control&lt;/code&gt; header sent in the response from the origin server. Once
the entry has expired, the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests#cache_update&#34;&gt;client issues these conditional &lt;code&gt;GET&lt;/code&gt; requests to
&amp;ldquo;refresh&amp;rdquo; the entry&lt;/a&gt;
only if it has changed.&lt;/p&gt;

  &lt;img src=&#34;/img/conditional-get.gif&#34;  alt=&#34;Conditional GET Example&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;h2 id=&#34;resource-integrity&#34;&gt;Resource Integrity&lt;/h2&gt;
&lt;p&gt;The lesser known use case for conditional requests is to maintain resource
integrity. Using entity tags and conditional headers
such as &lt;code&gt;If-Match&lt;/code&gt;, the origin server can utilize &lt;a href=&#34;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&#34;&gt;optimistic concurrency&lt;/a&gt;
control practices to validate whether the clients write request is being based
off of a stale representation, and properly facilitate a feedback cycle to
inform the client of this change of state.&lt;/p&gt;
&lt;p&gt;Even though this has value in non-concurrent request patterns, it really
shines when it comes to modern systems where more than one client could be
modifying resource state at the same time. If implemented correctly, writes
to resource state will avoid the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests#avoiding_the_lost_update_problem_with_optimistic_locking&#34;&gt;Lost Update Problem&lt;/a&gt;, and clients will be
empowered to understand when relavent resource state changes outside the
scope of their interaction.&lt;/p&gt;
&lt;h3 id=&#34;conditional-put--patch&#34;&gt;Conditional &lt;code&gt;PUT&lt;/code&gt; / &lt;code&gt;PATCH&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Modifications to resource state are achieved using the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT&#34;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH&#34;&gt;&lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;
HTTP methods. When issuing conditional &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;PATCH&lt;/code&gt; requests, the client
provides a value for the &lt;code&gt;If-Match&lt;/code&gt; or &lt;code&gt;If-Unmodified-Since&lt;/code&gt; headers. Again,
we will set &lt;code&gt;If-Unmodified-Since&lt;/code&gt; to the side.&lt;/p&gt;
&lt;p&gt;The premise here is similar to conditional &lt;code&gt;GET&lt;/code&gt; requests, in the way that
clients indicate one or many entity tags they have recorded for the resource
they wish to interact with. The format of the &lt;code&gt;If-Match&lt;/code&gt; header should
look familiar:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;If-Match: &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;
If-Match: &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;, &amp;#34;&amp;lt;entity tag value&amp;gt;&amp;#34;, …
If-Match: *
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, as the header name communicates, the intention is the client
wishes to perform the modifications &lt;em&gt;only if the current resource entity tag
matches&lt;/em&gt; at least one of the provided values for &lt;code&gt;If-Match&lt;/code&gt;. It is only then
that the modifications are performed, as this process validates the client
is issuing the request based on the context of the latest (most current)
state of that resource.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;*&lt;/code&gt; value essentially forces the request to succeed. More concretely, it
results in the precondition to evalute to &lt;code&gt;true&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match#directives&#34;&gt;as long as the resource
being targeted exists&lt;/a&gt;. Utilize this value with caution; it basically disables
the safety that this conditional request is intending to provide.&lt;/p&gt;
&lt;/blockquote&gt;

  &lt;img src=&#34;/img/conditional-update.gif&#34;  alt=&#34;Conditional GET Example&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;
&lt;h3 id=&#34;synchronizing-with-code-changes&#34;&gt;Synchronizing with Code Changes&lt;/h3&gt;
&lt;p&gt;As stated previously, there are significant benefits to storing entity tags
instead of computing them on the fly prior to comparisons. One drawback of this
approach, however, is that stored entity tags become stale as the structure (and thus the
code responsible for generating that structure) of representations evolves.
Many changes happen organically over time that are backwards compatible to
API consumers, thus can be made inline to existing contracts.&lt;/p&gt;
&lt;p&gt;There is room for creativity on how to handle this. One approach could be to
store a hash of the file contents responsible for generating the representation
alongside each entity tag stored. This would enable programmatic detection of
which entity tags need to be refreshed, which could be done lazily if detected
during a comparison operation. Instead of the lazy approach, if use cases
allow, a background job could be spawned upon code deployment or perhaps on a
cadence that identify these stale entity tags and update them accordingly.&lt;/p&gt;
&lt;p&gt;Depending on the number of resources your system manages, a simpler solution
of regenerating all entity tags could be viable. The main benefit of this
approach is simplicity; there would be no need to attempt to track &amp;amp; handle file
content changes.&lt;/p&gt;
&lt;h3 id=&#34;server-side-caching&#34;&gt;Server-side Caching&lt;/h3&gt;
&lt;p&gt;The use case of leveraging entity tags to ensure client-side caches remain fresh
through conditional &lt;code&gt;GET&lt;/code&gt; requests is well known. However, the opportunity for
server-side caching arises once the approach of storing entity tags is implemented.&lt;/p&gt;
&lt;p&gt;When entity tags are stored, the resource doesn&amp;rsquo;t need to be loaded prior
to determining the latest relevant entity tag. Loading the resource state
would defeat the point of the cache; the cache would be intended to return a
response without loading the resource with the goals of providing speedier
responses and reducing server system load.&lt;/p&gt;
&lt;p&gt;Assuming we have built the supporting infrastructure to store entity tags,
including the appropriate mechanics that ensures entity tags are regenerated
atomically when resource state changes, a &lt;a href=&#34;https://www.keycdn.com/support/what-is-cache-busting&#34;&gt;cache busting&lt;/a&gt;
strategy can be used. The cache key would itself comprise of the entity tag,
and since changes to resource state would result in a new entity tag
altogther, new representations are stored as completely different cache
entries. This strategy eliminates the possibility where a stale cached
representation is used incidentally.&lt;/p&gt;

  &lt;img src=&#34;/img/server-side-caching.png&#34;  alt=&#34;Server-side Caching Example&#34;  class=&#34;center&#34;  style=&#34;border-radius: 8px;&#34;  /&gt;


&lt;p&gt;Given new entries will be made in the cache each time the entity tag
changes, I suggest using a reasonably short expiration. Selecting a timeframe
for your expiration will be dependent on your use cases, the balance being
between growing cache size vs. cache hit count.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; To determine a cache entry expiration, think about how much time
typically elapses between creation of the resource and the first time it is
retrieved. Additionally, if your API allows modification of your resources,
it&amp;rsquo;s similarly valuable to consider how much time typically elapses between
the modification and a subsequent retrieval. Lastly, if you resources are
typically shared amongst many clients, consider how much time elapses between
the retrievals each client issues.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;scaling-collection-based-searches&#34;&gt;Scaling Collection-based Searches&lt;/h3&gt;
&lt;p&gt;We went in depth on how entity tags could be used to maintain client-side caches
of resources, as well as maintain resource integrity during modifications -
but what about collection resources? If resource state changes for a resource that
also influences the state of a collection resource, how do we make sure the
entity tag for that collection gets updated to?&lt;/p&gt;
&lt;p&gt;Some collection resources can be conceptually huge. Often APIs offer filtering
or pagination semantics that make consuming these collections easier and more
useful for clients. Given this, we should rule out the approach of attempting
to generate a new entity tag based on the entire collection. Instead, the
entity tag should be based on the representation actually sent to the client;
pagination and filtering included.&lt;/p&gt;
&lt;p&gt;From here, we should identify common searches or paginations requests that the
clients of the API issue. Perhaps these clients are commonly searching the
collection resource based on an identifier or other high cardinality
characteristic, such as a timestamp. Maybe it&amp;rsquo;s common for the client to only
be interested in the first one or two pages of the results. These workflows
will identify which we should actively attempt to cache.&lt;/p&gt;
&lt;p&gt;Once we&amp;rsquo;ve identified these common requests, we can actually pregenerate these
representations and their respective entity tags when any dependent resource
state is modified. In other words, the existing logic in place to update
the entity tags for a single resource can be further expanded to also not only
generate the entity tag based on the representation for that single resource,
but also a finite list of representations for dependent collection resources.&lt;/p&gt;
&lt;p&gt;With these new entity tags stored, it&amp;rsquo;s not possible for us to store these
precomputed search or pagination results in our cache.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Who knew there was so much to know about entity tags, right? It&amp;rsquo;s pretty amazing
that so many capabilities can be unlocked if they are fully adopted. My hope is that
you walk away from this feeling empowered to leverage entity tags on APIs you
are building!&lt;/p&gt;
&lt;p&gt;Do you currently, or have you previously used entity tags in projects you&amp;rsquo;ve
been a part of? Have you ever used them in a way that I didn&amp;rsquo;t capture?
Was there anything in this article I could go deeper on, or that
you think I could improve? Let me know in the comments!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Writing Better Docker Swarm Stacks</title>
      <link>/posts/organizing-docker-swarm-stacks/</link>
      <pubDate>Fri, 10 Feb 2023 21:51:53 -0800</pubDate>
      
      <guid>/posts/organizing-docker-swarm-stacks/</guid>
      <description>When I decided to stand up my home lab, I had little to no prior experience with Docker Swarm or other supporting infrastructure (shared storage, node provisioning, etc.) and applications (Portainer, NAS software, etc.). The process of building out my cluster has been packed with learnings from both the good and the bad experiences I&amp;rsquo;ve had along the way. Additionally, I&amp;rsquo;ve picked up some patterns and practices that have helped me get to where everything is today.</description>
      <content>&lt;p&gt;When I decided to stand up my home lab, I had little to no prior experience
with Docker Swarm or other supporting infrastructure (shared storage,
node provisioning, etc.) and applications (Portainer, NAS software, etc.). The process of
building out my cluster has been packed with learnings from both the good and
the bad experiences I&amp;rsquo;ve had along the way. Additionally, I&amp;rsquo;ve picked up some
patterns and practices that have helped me get to where everything is today.&lt;/p&gt;
&lt;p&gt;One area specifically worth sharing is regarding Docker Compose (stack) files.
This post walks through the most critical bits that inform how I organize
and write my stack files.&lt;/p&gt;
&lt;h3 id=&#34;multiple-stack-files&#34;&gt;Multiple Stack Files&lt;/h3&gt;
&lt;p&gt;It can be tempting to put all of your service definitions in a single stack file at first.
After all, it means you only have one file to worry about; everything is in a single place.
Also, you don&amp;rsquo;t have to worry about setting up a directory structure to organize - keeping things
tidy takes effort!&lt;/p&gt;
&lt;p&gt;However, I encourage you to fight the urge. There are some really tangible benefits
to breaking your stack files down by application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each stack file becomes self contained. The services defined in the stack file
are specific to a partular application you are spinning up. All of the volumes,
networks, etc. are all specific to the service definitions in the file; you&amp;rsquo;re no
longer trying to determine how everything ties together.&lt;/li&gt;
&lt;li&gt;Separating the files means you can deploy a finite set of services at a time
instead of all of them. This helps make your deployments more manageable and
ensures that you aren&amp;rsquo;t going to have unintended side-effects with other
services.&lt;/li&gt;
&lt;li&gt;There is less likelihood that you will accidentally reference an element
unintentionally or have a naming clash. If performing variable substitution, you
won&amp;rsquo;t have to worry about inadvertently giving two variables the same name.&lt;/li&gt;
&lt;li&gt;Each stack file is simply easier to read. Any one application usually doesn&amp;rsquo;t have
more than a few services (web server, database, cache, etc.) which is easier to
navigate than a single file with dozens of services.&lt;/li&gt;
&lt;li&gt;Tools such as Portainer provide an interface for managing stacks separate from
the services they define. With the files broken out by application, you can
manage each stack independently using the UI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As with anything, there are some drawbacks. When splitting out files, you
likely will have to repeat particular dependency definitions that various services of
yours utilize. For example, you will need to replicate a network definition in
each stack file that defines services that should be a part of that network. In
the event you need to change one of those dependencies, you will need to visit multiple
stack files to apply that change, which is a measurable amount of more work.&lt;/p&gt;
&lt;p&gt;For me, the benefits outweighed drawbacks.&lt;/p&gt;
&lt;h3 id=&#34;service-naming-conventions&#34;&gt;Service Naming Conventions&lt;/h3&gt;
&lt;p&gt;Every stack file defines a list of services. Often times your stack will
define a single service. However, some applications that you wish to deploy
could be more complex, including a web server, database, cache, job queue,
and more.&lt;/p&gt;
&lt;p&gt;When it comes to naming these services, I&amp;rsquo;ve found that naming them after the
role they play as the most effective. More specifically, I use the following
within my stacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many reasons why this strategy has worked for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The service names aren&amp;rsquo;t coupled to any particular implementation, which means
that switching them to something else ( let&amp;rsquo;s say, switching from &lt;code&gt;Redis&lt;/code&gt; to &lt;code&gt;Memcache&lt;/code&gt; )
won&amp;rsquo;t ripple up to the service names.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s easier to navigate your services. All your database services are end in&lt;code&gt;db&lt;/code&gt;.
All of your caches are end in &lt;code&gt;cache&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Since service names are prefixed by the name of the stack they belong to, this
strategy results in service names that avoid commonly seen mistakes, such
as repetitive words within the name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pinning-to-specific-image-versions&#34;&gt;Pinning to Specific Image Versions&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s easy to leave off a specific image version or to specify &lt;code&gt;latest&lt;/code&gt;.
However, this can really burn you, and typically at the worst time. Instead,
you should explicitly specify an image version (tag).&lt;/p&gt;
&lt;p&gt;Why? Well the are several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a cluster environment, images are pulled down on each node when the service is scheduled to run on them.
If at any time you add in additional nodes, or deploy to a node you hadn&amp;rsquo;t previously, it is possible
that the images on each node for the service aren&amp;rsquo;t the same. After all, &lt;code&gt;latest&lt;/code&gt;
is a moving target, and it&amp;rsquo;s not trivial to determine when new releases are cut.&lt;/li&gt;
&lt;li&gt;In situations where your node(s) experience a more catestrophic event (hardware
failure, botched OS upgrade, etc.) restoring the data and configuration for the
service(s) is half the battle, but running a version of the service compatible
with that configuration and data is the other half. Remember that the data and configuration that one
version of your service utilizes could be completely different from the current
(latest), and the last thing you want to do is spend time triaging errors that
are only happening because you&amp;rsquo;re running an incompatible version.&lt;/li&gt;
&lt;li&gt;It becomes much more apparent what version you are running for your services,
which makes it easier to search for bugs, documentation, and other artifacts
online.&lt;/li&gt;
&lt;li&gt;Upgrading your services becomes more intentional. You specify the next version you
want to upgrade to explicitly. This approach can help you avoid upgrading to
versions known to be less stable or haven&amp;rsquo;t been well tested yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;source-control-for-stack-files&#34;&gt;Source Control for Stack Files&lt;/h3&gt;
&lt;p&gt;Your stack files are essentially the source of truth for your cluster setup;
you should manage and track changes to them so you keep your sanity! So much tweaking,
changing, improving, and learning happens when you work in a cluster environment.
It&amp;rsquo;s going to be near impossible to keep all of those learnings in recent memory.
Using source control is an incredibly helpful tool to track all of that context
for future you, while also giving you the safety net of being able to roll back
your changes gracefully.&lt;/p&gt;
&lt;p&gt;An awesome side-effect of pushing your stack files to a remote source control
such as GitHub is applications like Portainer can integrate directly with
your stack repositories. This means you can make changes to your stacks and
push them to GitHub, and then you can use Portainer to deploy those changes.&lt;/p&gt;
&lt;h3 id=&#34;utilize-variable-substitution-for-image-tag&#34;&gt;Utilize Variable Substitution for Image Tag&lt;/h3&gt;
&lt;p&gt;Docker compose (stack) files support &lt;a href=&#34;https://docs.docker.com.xy2401.com/compose/environment-variables&#34;&gt;variable substitution&lt;/a&gt;, which means that
various elements of the stack can be dynamically evaluated based on environment
variables. This is even easier if you use a container management platform such
as Portainer, as it allows you declare the environment variables when you
create a stack directly in the UI.&lt;/p&gt;
&lt;p&gt;There are various use cases one could use variable substitution for, but one
that I strongly recommend is using them to specify the image version (tag). This way
you can manage upgrades for your services by simply changing the environment
variable and redeploying the stack. If you manage your stacks using source countrol
this means you can upgrade the image without any need to change the stack file.&lt;/p&gt;
&lt;h3 id=&#34;leverage-docker-secrets--config&#34;&gt;Leverage Docker Secrets &amp;amp; Config&lt;/h3&gt;
&lt;p&gt;Many services store their configuration using one or more static configuration files.
For example an &lt;code&gt;nginx&lt;/code&gt; proxy may be configured such that each domain that it
handles has a separate &lt;code&gt;*.conf&lt;/code&gt; file. For services that are primarily driven through
updates of static configuration files, &lt;a href=&#34;https://docs.docker.com/engine/swarm/configs/&#34;&gt;Docker Configs&lt;/a&gt; is a perfect fit. Using
Docker Configs in a swarm environment means you can edit these configuration
files in a streamlined and centralized way, can version that configuration,
and no longer need to set up the necessary infrastructure to ensure that
configuration is shared across all nodes that the service runs on.&lt;/p&gt;
&lt;p&gt;An additional common use case for services is specifying credentials. Many Dockerized
applications provide a way to specify credentials via environment variables. Some
services also rely on TLS/SSL configuration. These use cases are where &lt;a href=&#34;https://docs.docker.com/engine/swarm/secrets/&#34;&gt;Docker
Secrets&lt;/a&gt; shines. Instead of passing in credentials using variable subsitution,
or instead of creating infrastructure to share certificate information across
several nodes, you can use Docker Secrets similarly to Docker Configs but for
sensitive &amp;ldquo;secret&amp;rdquo; data.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m just scratching the surface with these. Expect a future blog post on how
I use both of these in my cluster setup!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tips for Hotswapping</title>
      <link>/posts/tips-for-hotswapping/</link>
      <pubDate>Mon, 15 Aug 2022 10:33:48 -0700</pubDate>
      
      <guid>/posts/tips-for-hotswapping/</guid>
      <description>When I build mechanical keyboards, I almost always introduce hotswap support. The dogmatic battles wage on over whether or not hotswap boards provide an equivalent or better experience as non-hotswapped versions, but it really just comes down to preference.
Why I Hotswap For me building in hotswap support is a no brainer. Here are some reasons why it is the ideal choice for me.
No Desoldering Switches Obviously, having a hotswap board means that you can easily pop out switches and put in new ones.</description>
      <content>&lt;p&gt;When I build mechanical keyboards, I almost always introduce &lt;a href=&#34;https://deskthority.net/wiki/Hot-swap&#34;&gt;hotswap&lt;/a&gt; support.
The dogmatic battles wage on over whether or not hotswap boards provide an
equivalent or better experience as non-hotswapped versions, but it really just
comes down to preference.&lt;/p&gt;
&lt;h1 id=&#34;why-i-hotswap&#34;&gt;Why I Hotswap&lt;/h1&gt;
&lt;p&gt;For me building in hotswap support is a no brainer. Here are some reasons why
it is the ideal choice for me.&lt;/p&gt;
&lt;h2 id=&#34;no-desoldering-switches&#34;&gt;No Desoldering Switches&lt;/h2&gt;
&lt;p&gt;Obviously, having a hotswap board means that you can easily pop out switches
and put in new ones. There are an insane number of variations of switches out
there, and unless you plan on building a particular configuration and then turning
around and selling it, I&amp;rsquo;d be willing to bet that you would at least entertain
the idea of changing the switches out at some point.&lt;/p&gt;
&lt;p&gt;Some say that instead of hotswapping, you could desolder your switches when you
decided to change it up. They aren&amp;rsquo;t wrong, but let&amp;rsquo;s be real: desoldering sucks.
It requires extra gear (&lt;a href=&#34;https://en.wikipedia.org/wiki/Desoldering&#34;&gt;desoldering&lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/Teenitor-Solder-Sucker-Desoldering-Removal/dp/B0739LXQ6N/ref=zg_bs_8107034011_sccl_2/140-5809656-7869339?pd_rd_i=B0739LXQ6N&amp;amp;psc=1&#34;&gt;pumps&lt;/a&gt;
at least) and takes way more time than popping out the existing switches and
putting new ones in on a hotswap board.&lt;/p&gt;
&lt;p&gt;Most importantly, desoldering requires getting the soldering iron out and heating
up each joint, which could lead to a greater risk of accidental damage.&lt;/p&gt;
&lt;h2 id=&#34;switch-compatibility&#34;&gt;Switch Compatibility&lt;/h2&gt;
&lt;p&gt;Most of the popular switches are compatible with hotswap sockets. You won&amp;rsquo;t feel
limited in your choices purely by making the decision to hotswap.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: Check out my tip below to see how to best determine what switches
will be compatible with your sockets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;iterability&#34;&gt;Iterability&lt;/h2&gt;
&lt;p&gt;I personally like to keep the door open. You never know what new switch may
come out in the future. Also, it will take time for you to try different
switches out to see what you like. You may even change your opinion of a
particular switch over time as you get to use it more and more.&lt;/p&gt;
&lt;p&gt;Take the pressure off of buying the &amp;ldquo;perfect&amp;rdquo; switches. Like I already
mentioned, there are almost too many to count, each having their own
characteristics.&lt;/p&gt;
&lt;h2 id=&#34;board-scarcity&#34;&gt;Board Scarcity&lt;/h2&gt;
&lt;p&gt;It is very common for various build kits to be a part of a group buy. These
group buys can be very infrequent, and they often take many months to fulfill.
As such, it simply isn&amp;rsquo;t a viable option to sell your board with your existing
switches in hopes of getting the same PCB and trying out different ones.&lt;/p&gt;
&lt;p&gt;By hotswapping the PCB, you can keep your board and instead give some new
switches a spin.&lt;/p&gt;
&lt;h1 id=&#34;tips--tricks&#34;&gt;Tips &amp;amp; Tricks&lt;/h1&gt;
&lt;h2 id=&#34;check-switch-compatibility&#34;&gt;Check Switch Compatibility&lt;/h2&gt;
&lt;p&gt;Not all switches can be hotswapped. More specifically, the contacts may not fit
inside the sockets you have chosen.&lt;/p&gt;
&lt;p&gt;Thankfully, the mechanical keyboard community has open sourced maintaining a
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1NhrXy6k88eY9bBqVuPWTAGW2q3GzszJ1JH-zuuGQ-iU/edit#gid=0&#34;&gt;shared spreadsheet&lt;/a&gt; that outlines switch
compatibilities for Mill Max 7305 and 0305 sockets. Kailh MX hotswap sockets
are advertised as being completely compatible for any MX switch.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: I&amp;rsquo;ve hotswapped boards using both Kailh sockets and Mill Max
7305 sockets, and have never had any issues with switch compatibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to &lt;a href=&#34;https://deskthority.net/wiki/Hot-swap#Hot-swap_switch_sockets&#34;&gt;Deskthority&lt;/a&gt;, there are other kinds of hotswap
(&amp;amp; pin; using them interchangeably) sockets, and to be
totally transparent, I&amp;rsquo;ve never seen these sold from any retailers I&amp;rsquo;ve visited,
nor seen conversation of them where I lurk on the interwebs. As such, I can&amp;rsquo;t
comment on these, besides just suggesting that you&amp;rsquo;ll increase the chance of
success by using sockets others are familiar with and have tested.&lt;/p&gt;
&lt;h2 id=&#34;hold-sockets-using-painters--masking-tape&#34;&gt;Hold Sockets Using Painters / Masking Tape&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/taped-board.jpg&#34;  alt=&#34;Taped PCB&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Sockets taped to PCB.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;The thought of adding sockets to the board can seem daunting at first. For me,
separating the step of inserting the sockets (and holding them in place) from
the soldering work helps with approaching the build in a more modular way.&lt;/p&gt;
&lt;p&gt;For this task, the secret weapon is tape; more specifically, painters tape or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Masking_tape&#34;&gt;masking tape&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/em&gt;: Do not use &lt;a href=&#34;https://en.wikipedia.org/wiki/Scotch_Tape&#34;&gt;Scotch magic tape&lt;/a&gt; or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Box-sealing_tape&#34;&gt;packing tape&lt;/a&gt;. These will melt onto the top of the sockets when
you solder them in. Additionally, both of these kinds of tape easily tear
when attempting to remove it, where painters or masking tape is less likely to
do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Insert sockets one row at a time. When you have finished inserting the sockets
for a row, tear off a single piece of tape that is long enough to cover then
entire row, with at least &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt; inches extra on each end of the board. Using
a single piece of tape makes it super easy to remove the tape after the soldering
is complete. The extra tape on the sides can be used to fold over itself,
essentially creating makeshift &amp;ldquo;tabs&amp;rdquo; that you can grab onto easily when removing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: Creating these tabs on the ends isn&amp;rsquo;t strictly necessary, but
strongly recommended. You&amp;rsquo;ll be scratching at the PCB attempting to lift the
tape otherwise, which can scuff or even damage the board if careless.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When moving on to additional rows, attempt to minimize the amount of overlap
between the tape for each row. You want to make sure that as you peel off one
row, that you don&amp;rsquo;t accidentally peel off the tape for an adjacent row. Going
one row at a time ensures you don&amp;rsquo;t remove tape that you may need to reapply
(if you find a mistake) and makes it easier to flip the board around as you
inspect it.&lt;/p&gt;
&lt;p&gt;As you peel the tape off each row after soldering, test each set of sockets with
a switch to ensure that it inserts properly.&lt;/p&gt;
&lt;h2 id=&#34;buy-a-solid-pair-of-tweezers&#34;&gt;Buy a Solid Pair of Tweezers&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/tweezers.jpeg&#34;  alt=&#34;Curved Point Tip Tweezers&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;VETUS curved point tip tweezers.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;No, don&amp;rsquo;t use any tweezers you might already have laying around. I strongly suggest
getting a pair that have a curved point tip, as it is way more ergonomic for
this use case. They are super affordable; usually &lt;code&gt;$5&lt;/code&gt; to &lt;code&gt;$10&lt;/code&gt; dollars.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BONUS&lt;/strong&gt;&lt;/em&gt;: If you are delicate enough, you can insert the pointed tips of the
tweezers into the socket, and then insert the socket into the board. After some
practice, you can go beast mode and put two sockets on the tweezers at once!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;rig-up-a-raised-working-surface&#34;&gt;Rig Up a Raised Working Surface&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/helping-hands.jpeg&#34;  alt=&#34;Helping Hands Tool&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Helping hands tool.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;When inserting the sockets into the board, I strongly recommend that you
raise the board off of your working surface. You&amp;rsquo;ll benefit from this because
the sockets themselves are taller than the thickness of the PCB - they won&amp;rsquo;t be
able to be inserted fully otherwise.&lt;/p&gt;
&lt;p&gt;The solutions are endless here, but don&amp;rsquo;t overthink it. If you have two sets of
&lt;a href=&#34;https://www.amazon.com/Neiko-01902-Adjustable-Magnifying-Alligator/dp/B000P42O3C/ref=asc_df_B000P42O3C/?tag=hyprod-20&amp;amp;linkCode=df0&amp;amp;hvadid=312096335436&amp;amp;hvpos=&amp;amp;hvnetw=g&amp;amp;hvrand=4691685772583898714&amp;amp;hvpone=&amp;amp;hvptwo=&amp;amp;hvqmt=&amp;amp;hvdev=c&amp;amp;hvdvcmdl=&amp;amp;hvlocint=&amp;amp;hvlocphy=9031554&amp;amp;hvtargid=pla-448870101576&amp;amp;psc=1&#34;&gt;helping hands&lt;/a&gt;, having those set up such that each set holds up one side of the
PCB could do the trick. If you have two spare rolls of tape, you could place each
down on your surface to prop up two opposite sides. You could even snag two
pencils or pens to use instead of the rolls of tape; just make sure they can&amp;rsquo;t
roll!&lt;/p&gt;
&lt;h2 id=&#34;swap-with-intention&#34;&gt;Swap with Intention&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/hotswap-switches.webp&#34;  alt=&#34;Hotswap Switches&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Hotswap switches.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Something that doesn&amp;rsquo;t get emphasized too often is that just because you can
change out your switches, doesn&amp;rsquo;t mean you should do it just to do it. In other
words, the sockets themselves have lifespans that you could technically measure
in the number of swaps, just as you often see the lifespan of switches measured
in keystrokes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: The Kailh hotswap sockets are &lt;a href=&#34;https://divinikey.com/products/kailh-hot-swap-sockets&#34;&gt;rated for 100 swaps&lt;/a&gt;.
There doesn&amp;rsquo;t appear to be explicit mentioning of the lifespan for Mill Max
sockets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My recommendation is to view the ability to hotswap as a &amp;lsquo;future proofing&amp;rsquo;
characteristic, rather than a daily or weekly activity. It keeps the door open
for you to change your switches if you decided to do so, allowing you to
iterate on your keyboard more gracefully over time.&lt;/p&gt;
&lt;h2 id=&#34;buy-extra-sockets&#34;&gt;Buy Extra Sockets&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/mill-max-sockets.webp&#34;  alt=&#34;Mill Max Sockets&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Mill Max 3305 Sockets&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;The sockets can be tiny (&lt;code&gt;2.67mm&lt;/code&gt; tall for the
&lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;Mill Max 7305&lt;/a&gt; for example). You will almost certainly drop a
couple of these and have no clue where they went.&lt;/p&gt;
&lt;p&gt;In addition to the reality that you may lose some of them, it&amp;rsquo;s also good to
have extras in case you accidentally apply too much solder and get solder inside
the socket itself. Once solder is in the socket, there is no fixing it - consider
it a cost of doing business!&lt;/p&gt;
&lt;p&gt;Lastly, once you do it once, it&amp;rsquo;s likely you&amp;rsquo;ll want to do it again. Maybe you
have a keyboard with number keys, such as a 40%, 60%, 65%, etc. and you later
decided you want a sidecar numpad. Maybe you want to build another board altogether.
You don&amp;rsquo;t want to be halfway through a build and find out you don&amp;rsquo;t enough
sockets.&lt;/p&gt;
&lt;h1 id=&#34;downsides&#34;&gt;Downsides&lt;/h1&gt;
&lt;p&gt;Building a mechanical keyboard with hotswap support isn&amp;rsquo;t a home run; it does
come with some downsides.&lt;/p&gt;
&lt;p&gt;Most notably, it will be more expensive. Mill max sockets aren&amp;rsquo;t cheap, and
depending on the size of your board, you may use a lot of them (two per switch).
Luckily, most online retailers for the sockets provide bulk discount rates. If
you can swing it, I strongly recommend buying enough to take advantage of some
of these discounts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;EXAMPLE&lt;/strong&gt;&lt;/em&gt;: For example, buying &lt;code&gt;499&lt;/code&gt; &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;Mill Max 7305&lt;/a&gt;
sockets on Digikey will cost you &lt;code&gt;$158.02&lt;/code&gt; (&lt;code&gt;$0.31668&lt;/code&gt; each), while &lt;code&gt;500&lt;/code&gt;
will cost &lt;code&gt;$150.79&lt;/code&gt; (&lt;code&gt;$0.30158&lt;/code&gt; each), which is &lt;code&gt;~4.8%&lt;/code&gt; discount. And yep you
read that right, you save &lt;code&gt;$7&lt;/code&gt; even though you are getting one more socket.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next, it will require a little more upfront time investment. You&amp;rsquo;ll be working
with tweezers to insert each socket, taping them in place, and soldering them in.
Overall though, I&amp;rsquo;ve found in practice it doesn&amp;rsquo;t add too much time;
it&amp;rsquo;s the same amount of soldering, so really it comes down to the prep work.&lt;/p&gt;
&lt;p&gt;Lastly, they are a little trickier to solder than the pins on a switch. Depending
on whether you get longer sockets, (like the &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp./0305-2-15-80-47-80-10-0/2639493?utm_adgroup=Terminals%20-%20PC%20Pin%20Receptacles%2C%20Socket%20Connectors&amp;amp;utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Shopping_Product_Connectors%2C%20Interconnects_NEW&amp;amp;utm_term=&amp;amp;utm_content=Terminals%20-%20PC%20Pin%20Receptacles%2C%20Socket%20Connectors&amp;amp;gclid=Cj0KCQjwgO2XBhCaARIsANrW2X0ZAFszkHLN835TWu_m3qZyo4K4jiFYgfiW2spKUK9OuxyNLCD5oZwaAs34EALw_wcB&#34;&gt;0305s&lt;/a&gt;; &lt;code&gt;3.94mm&lt;/code&gt;),
or shorter ones (like the &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;7305s&lt;/a&gt;; &lt;code&gt;2.67mm&lt;/code&gt;), there is an
increased likelyhood you&amp;rsquo;ll accidentally get solder in the socket itself and
need to replace it altogether.&lt;/p&gt;
&lt;h1 id=&#34;anything-i-missed&#34;&gt;Anything I Missed?&lt;/h1&gt;
&lt;p&gt;These tips &amp;amp; tricks are the ones I have found most impactful during my builds
when it comes to hotswapping. I hope that they will help you as well.&lt;/p&gt;
&lt;p&gt;Building these boards is a bit of a craft. I&amp;rsquo;d love to hear about other approaches
that you might have taken!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Who&#39;s the Boss?</title>
      <link>/posts/docker-swarm-managers/</link>
      <pubDate>Sat, 13 Aug 2022 08:12:39 -0700</pubDate>
      
      <guid>/posts/docker-swarm-managers/</guid>
      <description>Every node in a Docker Swarm plays at least one of two particular roles: worker and/or manager. When you create a new cluster, you start out by creating it with a single node that is both a manager and a worker, and specify an IP address to advertise that manager to other managers as you add them.
Roles So what are the responsibilities of these two roles anyway? How do you know how many managers and workers to deploy in your swarm?</description>
      <content>&lt;p&gt;Every node in a Docker Swarm plays at least one of two particular roles: worker
and/or manager. When you create a new cluster, you start out by creating it with
a single node that is both a manager and a worker, and &lt;a href=&#34;https://docs.docker.com/engine/swarm/admin_guide/#configure-the-manager-to-advertise-on-a-static-ip-address&#34;&gt;specify an IP address
to advertise that manager to other managers&lt;/a&gt; as you add them.&lt;/p&gt;
&lt;h1 id=&#34;roles&#34;&gt;Roles&lt;/h1&gt;
&lt;p&gt;So what are the responsibilities of these two roles anyway? How do you know
how many managers and workers to deploy in your swarm? Let&amp;rsquo;s get into it!&lt;/p&gt;
&lt;h2 id=&#34;managers&#34;&gt;Managers&lt;/h2&gt;
&lt;p&gt;As you might imagine, &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#manager-nodes&#34;&gt;manager nodes&lt;/a&gt; in a Docker Swarm take on
additional cluster management tasks. Such tasks include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maintaining &amp;amp; distributing cluster state across manager nodes in the cluster&lt;/li&gt;
&lt;li&gt;scheduling services to various nodes in the swarm&lt;/li&gt;
&lt;li&gt;serving swarm mode HTTP API endpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;workers&#34;&gt;Workers&lt;/h2&gt;
&lt;p&gt;Intuitively, &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#worker-nodes&#34;&gt;worker nodes&lt;/a&gt; don&amp;rsquo;t perform any of the management
tasks that the manager nodes do; all that stuff is above the pay grade.
Instead, worker nodes are solely responsible for executing service tasks.&lt;/p&gt;
&lt;h2 id=&#34;promotion--demotion&#34;&gt;Promotion &amp;amp; Demotion&lt;/h2&gt;
&lt;p&gt;Roles for nodes can be changed. To &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/node_promote/&#34;&gt;promote&lt;/a&gt; a worker node to
be a manager node, run the following:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker node promote &amp;lt;NODE NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;And to &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/node_demote/&#34;&gt;demote&lt;/a&gt; a node, run this command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker node demote &amp;lt;NODE NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: By default, all manager nodes are also worker nodes. Assuming you
have a cluster that has more than one node, you can prevent any one manager node
from taking on worker node responsibilities by moving it&amp;rsquo;s availability status
to &lt;code&gt;Drain&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;deployment-strategies&#34;&gt;Deployment Strategies&lt;/h1&gt;
&lt;p&gt;Okay, so we&amp;rsquo;ve nailed down the roles that nodes can play within a swarm, but you
may be wondering:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How do I choose which role(s) to assign to a node?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a great question, and one that can have pretty large impact.&lt;/p&gt;
&lt;h2 id=&#34;to-manage-or-not-to-manage&#34;&gt;To Manage or Not to Manage&lt;/h2&gt;
&lt;p&gt;Just like any business, having too many or too little managers can be problematic.
When it comes to provisioning managers in a Docker Swarm, you want to strike the
right balance of &lt;strong&gt;resiliency&lt;/strong&gt; and &lt;strong&gt;performance&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s touch first on resiliency.&lt;/p&gt;
&lt;h3 id=&#34;resiliency&#34;&gt;Resiliency&lt;/h3&gt;
&lt;p&gt;One of the primary reasons why we are using an orchestration engine like Docker
Swarm is so that we can have a degree of fault tolerance. If any particular
node in the swarm decides to take an &amp;ldquo;unnannounced vacation&amp;rdquo;, we should be able
to schedule whatever tasks (containers that comprise a service) to a different,
active node.&lt;/p&gt;
&lt;p&gt;We have to be particularly strategic to provide this fault tolerance when it comes
to managers. After all, they are responsible for taking on some pretty important
and necessary tasks. In order to best understand how many managers we should
deploy, we should quickly touch on the algorithm Docker Swarm uses to ensure
consistent state.&lt;/p&gt;
&lt;h4 id=&#34;raft-consensus-algorithm&#34;&gt;Raft Consensus Algorithm&lt;/h4&gt;
&lt;p&gt;Sounds fancy right?&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://thesecretlivesofdata.com/raft/&#34;&gt;Raft Consensus Algorithm&lt;/a&gt; is essentially an algorithm that
Docker Swarm uses to make sure each manager in the cluster is storing the same
consistent state. The most important thing to note in the context of this discussion
is that manager nodes need to agree on what the state is, and that &amp;ldquo;agreement&amp;rdquo;
is achieved as a function of how many nodes share the same information. If the
majority, also referred to as a &amp;ldquo;quorum&amp;rdquo;, is achieved when new state is proposed,
then it will be distributed to all managers.&lt;/p&gt;
&lt;p&gt;Approaching this mathematically, we can essentially use the following simple
equations to determine achievable fault tolerance and quorum:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;given:
  N = the number of manager nodes in the cluster.

then:
  number of manager nodes that can be down = (N-1)/2
  number of manager nodes to achieve quorum = (N/2)+1
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;EXAMPLE:&lt;/em&gt;&lt;/strong&gt; Assuming we have &lt;code&gt;3&lt;/code&gt; manager nodes (&lt;code&gt;N = 3&lt;/code&gt;) in a cluster of &lt;code&gt;5&lt;/code&gt;
total nodes, we would be able to support &lt;code&gt;1&lt;/code&gt; manager node being down at any
moment in time (&lt;code&gt;(3-1)/2 = 1&lt;/code&gt;). The number of manager nodes to reach quorum
would be &lt;code&gt;2&lt;/code&gt; (&lt;code&gt;(3/2)+1 = 2&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ultimately, the number of managers you deploy in your cluster depends somewhat
on the total number of nodes in your cluster. It is recommended you have at least
&lt;code&gt;3&lt;/code&gt; manager nodes, as such a configuration allows for one manager node to be down.&lt;/p&gt;
&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;
&lt;p&gt;As with much in software design, the resiliency comes at a cost. Since one element
of increasing the resiliency involves introducing redundency, more work is required
to spread information as we introduce more managers. Adding more manager nodes,
means more managers are needed to meet quorum.&lt;/p&gt;
&lt;p&gt;When it comes to Docker Swarm, it&amp;rsquo;s generally &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#manager-nodes&#34;&gt;not recommended to have any more
than &lt;code&gt;7&lt;/code&gt; manager nodes&lt;/a&gt;. Such a configuration would allow &lt;code&gt;3&lt;/code&gt;
managers to be simultaneously down at any moment and require &lt;code&gt;4&lt;/code&gt; nodes to reach
quorum.&lt;/p&gt;
&lt;h3 id=&#34;unreachable-quorum&#34;&gt;Unreachable Quorum&lt;/h3&gt;
&lt;p&gt;In the event that the number of manager nodes simultaneously down exceeds the
allowable fault tolerance, the state of the cluster is not allowed to change.
New tasks cannot be scheduled, and the existing tasks cannot be rebalanced to
other nodes if required. The following error will be returned when a management
operation is attempted:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error response from daemon: rpc error: code = 4 desc = context deadline exceeded
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The ideal way to recover here is to get manager nodes back online. If for some
reason the managers can&amp;rsquo;t be brought back online, a new cluster will need to
be provisioned. This can be performed using the following command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm init --force-new-cluster --advertise-addr &amp;lt;IP&amp;gt;:2377
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Make sure to replace &lt;code&gt;&amp;lt;IP&amp;gt;&lt;/code&gt; with the IP address or DNS resolvable name of the
host you desire to be the initial manager of this new cluster.&lt;/p&gt;
&lt;h4 id=&#34;workers-get-shit-done&#34;&gt;Workers Get Shit Done&lt;/h4&gt;
&lt;p&gt;Compared to manager nodes, worker nodes are far simpler. Since they are
designated for executing the tasks for the swarm, the main deployment concerns
are simply ensuring that there are enough workers to balance the load.&lt;/p&gt;
&lt;p&gt;To join an existing swarm cluster as a worker node, run the following commands
to retrieve the worker join token:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;3&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;3&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm join-token worker
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Assuming the above command provided this output:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker swarm join \
  --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \
  192.168.99.100:2377
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The final step would be to run that command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;4&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;4&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm join \
  --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \
  192.168.99.100:2377
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: When adding workers to accommodate for expected or current
workloads, make sure to take the various resource related requirements that
may be specified for a particular service. Remember that workers that
don&amp;rsquo;t meet those specified requirements will not be scheduled to execute
those tasks.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>You Had One Job Portainer Console!</title>
      <link>/posts/portainer-console-issue/</link>
      <pubDate>Fri, 12 Aug 2022 22:04:10 -0700</pubDate>
      
      <guid>/posts/portainer-console-issue/</guid>
      <description>I use Portainer as my central hub for managing my Docker Swarm that powers my home lab, and it&amp;rsquo;s awesome.
One of the many features it includes is the ability to open up a &amp;lsquo;console&amp;rsquo; to any container (task) running in the swarm - think basically a UI for docker exec -it &amp;lt;CONTAINER ID&amp;gt; /bin/bash. It even provides the affordance of specifying a different user (other than the default of root) or shell (other than the default of bash).</description>
      <content>&lt;p&gt;I use &lt;a href=&#34;https://www.portainer.io/&#34;&gt;Portainer&lt;/a&gt; as my central hub for managing my Docker Swarm
that powers my home lab, and it&amp;rsquo;s awesome.&lt;/p&gt;
&lt;p&gt;One of the many features it includes is the ability to open up a &amp;lsquo;console&amp;rsquo; to any
container (task) running in the swarm - think basically a UI for
&lt;code&gt;docker exec -it &amp;lt;CONTAINER ID&amp;gt; /bin/bash&lt;/code&gt;. It even provides the affordance of
specifying a different user (other than the default of &lt;code&gt;root&lt;/code&gt;) or shell (other
than the default of &lt;code&gt;bash&lt;/code&gt;).&lt;/p&gt;
&lt;h1 id=&#34;connecting&#34;&gt;Connecting&amp;hellip;&lt;/h1&gt;
&lt;p&gt;One day, I went to hop into a console session on one of my containers, but instead
of the shell launching, Portainer seemed to be stuck when attempting to connect.&lt;/p&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/portainer-connecting-issue.png&#34;  alt=&#34;Portainer Connecting Issue&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Screenshot of the issue.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;What gives? No error toasts appear in the top right to examine as one might expect.
Time to dig deeper.&lt;/p&gt;
&lt;p&gt;Once I landed in the logs, I tripped over some of these:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

level=info msg=&amp;#34;2022/08/13 05:06:35 websocketproxy: Error when copying from backend to client: websocket: close 1006 (abnormal closure): unexpected EOF&amp;#34;
level=info msg=&amp;#34;2022/08/13 05:07:01 websocketproxy: Error when copying from backend to client: websocket: invalid close code&amp;#34;

...

level=info msg=&amp;#34;2022/08/13 05:12:22 websocketproxy: couldn&amp;#39;t upgrade websocket: the client is not using the websocket protocol: &amp;#39;upgrade&amp;#39; token not found in &amp;#39;Connection&amp;#39; header&amp;#34;
level=info msg=&amp;#34;2022/08/13 05:12:40 websocketproxy: couldn&amp;#39;t upgrade websocket: the client is not using the websocket protocol: &amp;#39;upgrade&amp;#39; token not found in &amp;#39;Connection&amp;#39; header&amp;#34;

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Interesting. Seems Portainer is attempting to make use of some websockets but can&amp;rsquo;t.&lt;/p&gt;
&lt;h1 id=&#34;root-cause--fix&#34;&gt;Root Cause + Fix&lt;/h1&gt;
&lt;p&gt;To take a half a step back real quick, it&amp;rsquo;s worth mentioning that I use nginx as
my reverse proxy of choice for my swarm. Essentially it runs as a container
within the swarm and forwards all traffic on ports &lt;code&gt;80&lt;/code&gt; (http) or &lt;code&gt;443&lt;/code&gt; (https)
to other services. One of these services is Portainer.&lt;/p&gt;
&lt;p&gt;As it turns out, my nginx configuration did not support websockets. I had to make
the following changes:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;diff&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-diff&#34; &gt;&lt;code&gt;
server {
	server_name ~^sweet.domain.com$;

	listen 443 ssl;
	ssl_certificate /ssl/cert.pem;
	ssl_certificate_key /ssl/key.pem;

	access_log /var/log/nginx/data-access.log combined;

	location / {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass https://sweet_swarm_task:9443;
&amp;#43;		proxy_http_version 1.1;
&amp;#43;		proxy_set_header Upgrade $http_upgrade;
&amp;#43;		proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
	}
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;I definitely wasn&amp;rsquo;t the only one to make this mistake; this
&lt;a href=&#34;https://github.com/portainer/portainer/issues/6353&#34;&gt;GitHub issue&lt;/a&gt; being one example! Although, reading through
some of the conversation retriggered some interest in exploring
&lt;a href=&#34;https://nginxproxymanager.com/&#34;&gt;Nginx Proxy Manager&lt;/a&gt; once again - perhaps more on that
in a future post.&lt;/p&gt;
&lt;h4 id=&#34;breakdown&#34;&gt;Breakdown&lt;/h4&gt;
&lt;p&gt;In case you are saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hold up, what are these changes?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got you covered. Let&amp;rsquo;s break it down.&lt;/p&gt;
&lt;h5 id=&#34;proxy_http_version-11&#34;&gt;&lt;code&gt;proxy_http_version 1.1;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Indicates that the HTTP version should be set to &lt;code&gt;1.1&lt;/code&gt;. Connection upgrades
can only be performed for &lt;code&gt;1.1&lt;/code&gt;, and not &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;
(&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism#upgrading_to_a_websocket_connection&#34;&gt;explicitly disallowed&lt;/a&gt;).&lt;/p&gt;
&lt;h5 id=&#34;proxy_set_header-upgrade-http_upgrade&#34;&gt;&lt;code&gt;proxy_set_header Upgrade $http_upgrade;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the value of the &lt;code&gt;Upgrade&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&#34;&gt;header&lt;/a&gt; to have the value
provided (see &lt;a href=&#34;%5Bhttps://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_%5D&#34;&gt;&lt;code&gt;$http_*&lt;/code&gt; nginx variables&lt;/a&gt;). Clients utilize
this header to indicate that they wish to upgrade the connection from a
particular version of HTTP (1.1 for example) to another version, or to a websocket
connection.&lt;/p&gt;
&lt;h5 id=&#34;proxy_set_header-connection-upgrade&#34;&gt;&lt;code&gt;proxy_set_header Connection &amp;quot;upgrade&amp;quot;;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;Connection&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Connection&#34;&gt;header&lt;/a&gt; to have a value of
&lt;code&gt;&amp;quot;upgrade&amp;quot;&lt;/code&gt;, which indicates that nginx needs to process the &lt;code&gt;Upgrade&lt;/code&gt;
&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&#34;&gt;header&lt;/a&gt; before forwarding. This header must be sent whenever
the &lt;code&gt;Upgrade&lt;/code&gt; is sent.&lt;/p&gt;
&lt;h1 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve only scratched the surface on this stuff. If you are interesting in reading
further, check out &lt;a href=&#34;https://www.nginx.com/blog/websocket-nginx/&#34;&gt;this awesome post&lt;/a&gt; on the
&lt;a href=&#34;https://www.nginx.com/blog&#34;&gt;nginx blog&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tale of the Unknown GitHub Secrets</title>
      <link>/posts/github-environments-and-secrets/</link>
      <pubDate>Wed, 10 Aug 2022 20:43:31 -0700</pubDate>
      
      <guid>/posts/github-environments-and-secrets/</guid>
      <description>When building out the deployment pipeline for this blog, I had my first run-in with Github Actions. In particular, my goal was to automatically generate a new Docker image when I push changes to the GitHub repository containing the source files, and push that Docker image to my corresponding DockerHub repository.
What secrets? In order to achieve this, I reached for docker/login-action. This straightforward action essentially takes the credentials provided to it and logs into DockerHub using those credentials.</description>
      <content>&lt;p&gt;When building out the deployment pipeline for this blog, I had my first run-in
with &lt;a href=&#34;https://github.com/features/actions&#34;&gt;Github Actions&lt;/a&gt;. In particular, my goal was to automatically generate a
new Docker image when I push changes to the GitHub repository containing
the source files, and push that Docker image to my corresponding DockerHub repository.&lt;/p&gt;
&lt;h1 id=&#34;what-secrets&#34;&gt;What secrets?&lt;/h1&gt;
&lt;p&gt;In order to achieve this, I reached for &lt;a href=&#34;https://github.com/marketplace/actions/docker-login&#34;&gt;&lt;code&gt;docker/login-action&lt;/code&gt;&lt;/a&gt;. This straightforward
action essentially takes the credentials provided to it and logs into DockerHub
using those credentials.&lt;/p&gt;
&lt;p&gt;I went ahead and bootstrapped a &lt;a href=&#34;https://github.com/fr33r/.com-blog/blob/main/.github/workflows/docker.yml&#34;&gt;workflow configuration&lt;/a&gt; based on the example
provided in the &lt;a href=&#34;https://github.com/marketplace/actions/docker-login&#34;&gt;documentation for the DockerHub registry&lt;/a&gt;, and created the
&lt;code&gt;DOCKERHUB_USERNAME&lt;/code&gt; and &lt;code&gt;DOCKERHUB_PASSWORD&lt;/code&gt; secrets in GitHub.&lt;/p&gt;
&lt;p&gt;Then it was time to test. I went ahead and pushed some changes to trigger the
workflow, and then&amp;hellip;&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;output&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-output&#34; &gt;&lt;code&gt;
Run docker/login-action@v2
  with:
    ecr: auto
    logout: true
Error: Username and password required
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Hmm, strange.&lt;/p&gt;
&lt;p&gt;I know I created the secrets and &lt;a href=&#34;https://github.com/fr33r/.com-blog/blob/352aa1c2bc88345e05efe3f9174643f0789e2abf/.github/workflows/docker.yml#L25-L26&#34;&gt;specified them in the workflow configuration&lt;/a&gt;.
Why didn&amp;rsquo;t they come through? Is this a generic error message, or does it truly
get displayed when the credentials are missing? Did I forget to add values for the
secrets? Do the keys for the secrets line up in the workflow configuration?&lt;/p&gt;
&lt;p&gt;To help me find some answers, I reran the failed workflow with debug logs enabled:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;output&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-output&#34; &gt;&lt;code&gt;
##[debug]Evaluating condition for step: &amp;#39;Login to DockerHub&amp;#39;
##[debug]Evaluating: success()
##[debug]Evaluating success:
##[debug]=&amp;gt; true
##[debug]Result: true
##[debug]Starting: Login to DockerHub
##[debug]Register post job cleanup for action: docker/login-action@v2
##[debug]Loading inputs
##[debug]Evaluating: secrets.DOCKERHUB_USERNAME
##[debug]Evaluating Index:
##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_USERNAME&amp;#39;
##[debug]=&amp;gt; null
##[debug]Result: null
##[debug]Evaluating: secrets.DOCKERHUB_TOKEN
##[debug]Evaluating Index:
##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_TOKEN&amp;#39;
##[debug]=&amp;gt; null
##[debug]Result: null
##[debug]Loading env
Run docker/login-action@v2
  with:
    ecr: auto
    logout: true
::save-state name=isPost::true
##[debug]Save intra-action state isPost = true
::save-state name=registry::
##[debug]Save intra-action state registry = 
::save-state name=logout::true
##[debug]Save intra-action state logout = true
Error: Username and password required
##[debug]Node Action run completed with exit code 1
##[debug]Finishing: Login to DockerHub
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Okay. So the workfow is attempting to resolve the secrets, but it seems it is printing
out &lt;code&gt;null&lt;/code&gt; for both the &lt;code&gt;DOCKERHUB_USERNAME&lt;/code&gt; and &lt;code&gt;DOCKERHUB_TOKEN&lt;/code&gt;. I remember seeing
&lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets#accessing-your-secrets&#34;&gt;something&lt;/a&gt; about values of secrets being redacted from action output, but does that mean
that it will print &lt;code&gt;null&lt;/code&gt;? That can&amp;rsquo;t be right&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;root-cause--fix&#34;&gt;Root Cause + Fix&lt;/h1&gt;
&lt;p&gt;After spending far too much time turning over these stones, I finally discovered the
concept I was lacking knowledge on: GitHub environments.&lt;/p&gt;
&lt;p&gt;Being totally new to setting up secrets in GitHub actions, I had missed the &lt;a href=&#34;https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment&#34;&gt;documentation&lt;/a&gt;
that described how workflows interacted with GitHub environments. Equipped with this ignorance,
I proceeded to create the GitHub secrets as environment secrets, not repository
secrets. Combine this naiveness with the documentation provided for
&lt;code&gt;docker/login-action&lt;/code&gt;, which outlines examples that implicitly assumes
repository level secrets are used, and the end result is that the workflow
configuration I created couldn&amp;rsquo;t access the secrets I had created.&lt;/p&gt;
&lt;p&gt;There were two solutions for here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make my workflow configuration environment aware, or&lt;/li&gt;
&lt;li&gt;remove the existing secrets I had created and add them as repository level secrets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given I had created the environment without much intention, and because I currently
don&amp;rsquo;t have much of a use case for supporting multiple environments for this project,
I chose to go with the latter approach. Once the credentials were moved (and the old
ones removed), it worked like a charm!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Had I chosen to go with the first option, I would&amp;rsquo;ve added an &lt;code&gt;environment&lt;/code&gt;
key within the workflow configuration, as outlined in &lt;a href=&#34;https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment&#34;&gt;this&lt;/a&gt; GitHub documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;how-could-this-be-better&#34;&gt;How could this be better?&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s clear that the root cause was my user error here. However, I definitely
think it is worth highlighting a couple of opportunities for improvement that
could prevent others from having to climb out of the same trap.&lt;/p&gt;
&lt;h4 id=&#34;better-error-messaging&#34;&gt;Better Error Messaging&lt;/h4&gt;
&lt;p&gt;Error messages could always be better right? When it comes to improving the feedback
loop, the first thing I identify is whether or not the application generating the error
message has enough information to actually generate a more descriptive message and/or
a suggested fix.&lt;/p&gt;
&lt;p&gt;In this situation, that is totally the case. It was clear here that the secrets being
referenced did in fact exist, but just in an environment and not at the repository level.
GitHub even has &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets#naming-your-secrets&#34;&gt;documentation&lt;/a&gt; on how two secrets with the same key but exist in both levels
are treated, so awareness of secrets in both places is already being handled to some
degree.&lt;/p&gt;
&lt;p&gt;To illustrate, imagine the debug logs had entries like this instead:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_TOKEN&amp;#39;
##[debug]..Checking repository secrets
##[debug]=&amp;gt; null
##[debug]..Checking environment: staging
##[debug]=&amp;gt; null
##[debug]..Checking environment: production
##[debug]...Match found. Did you mean to reference an environment secret instead?

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this verbiage, there is no need to dive in for triaging. Users would
know immediately why their secrets were not accessible.&lt;/p&gt;
&lt;p&gt;In a similar vein, it&amp;rsquo;s worth asking the question whether referencing secrets
when there are 0 secrets detected is ever an expected scenario. In this circumstance,
the workflow couldn&amp;rsquo;t find any secrets, despite both of them being listed. Perhaps
an error message indicating the following would be beneficial:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..No secrets exist

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This message would at least be more straightforward that no secrets are detected,
eliminating the additional steps the user would need to take to understand why
&lt;code&gt;null&lt;/code&gt; is being passed around.&lt;/p&gt;
&lt;h4 id=&#34;comprehensive-documentation&#34;&gt;Comprehensive Documentation&lt;/h4&gt;
&lt;p&gt;This one may be more of a reach, but it&amp;rsquo;s worth calling out that the documentation
for the &lt;code&gt;docker/login-action&lt;/code&gt; assumes that environments aren&amp;rsquo;t being used. I don&amp;rsquo;t
fault the maintainers for thinking it wouldn&amp;rsquo;t be necessary to address explicitly -
after all, GitHub environments is it&amp;rsquo;s own wide-spread feature, and it shouldn&amp;rsquo;t
be necessary for every maintainer of a GitHub action to eductate users of other
GitHub features.&lt;/p&gt;
&lt;p&gt;However, the maintainers &lt;em&gt;are&lt;/em&gt; responsible for writing the code to generate
error messages for their action. Their documentation doesn&amp;rsquo;t outline the potential
error that can be thrown, or potential troubleshooting steps.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Building a Pi Cluster</title>
      <link>/posts/building-a-pi-cluster/</link>
      <pubDate>Sat, 06 Aug 2022 21:22:01 -0700</pubDate>
      
      <guid>/posts/building-a-pi-cluster/</guid>
      <description>Having been a software engineer for years, I had heard about Raspberry Pi computers, and the tinkering people were doing with them. Despite the chatter, I didn&amp;rsquo;t have any sort of project in mind, and honestly didn&amp;rsquo;t take the time to learn about them.
One year when the holiday season began rolling around, the team decided to partake in a &amp;ldquo;secret santa&amp;rdquo; gift giving activity. Without any better ideas, I put down that I was interested an a Raspberry Pi.</description>
      <content>&lt;p&gt;Having been a software engineer for years, I had heard about Raspberry Pi
computers, and the tinkering people were doing with them. Despite the chatter,
I didn&amp;rsquo;t have any sort of project in mind, and honestly didn&amp;rsquo;t take the time
to learn about them.&lt;/p&gt;
&lt;p&gt;One year when the holiday season began rolling around, the
team decided to partake in a &amp;ldquo;secret santa&amp;rdquo; gift giving activity. Without any
better ideas, I put down that I was interested an a Raspberry Pi.&lt;/p&gt;
&lt;p&gt;Fast-forward three years later and I finally found a project that I was genuinely
excited about: creating a Raspberry Pi cluster. I dug up that model 3B+ that I
got from the gift exchange years prior to began setting it up for the first
time, and I&amp;rsquo;ve been at it ever since!&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;p&gt;In order to build a Raspberry Pi cluster, you need some gear! Lets walk through
the various items I ended up with.&lt;/p&gt;
&lt;h4 id=&#34;pis&#34;&gt;Pis&lt;/h4&gt;
&lt;p&gt;The most important part of the Pi cluster is&amp;hellip; well&amp;hellip; the Pis!&lt;/p&gt;
&lt;p&gt;I already got one as a gift - check! The remaining three I needed to source internationally
(more on that later). To future proof, I was aiming for the model 4B. Although
it would&amp;rsquo;ve been nice to get my hands on a 4GB or 8GB configuration, they were
basically myths during these times. I settled for three 2GB models.&lt;/p&gt;
&lt;h4 id=&#34;poe-hats&#34;&gt;PoE+ Hats&lt;/h4&gt;
&lt;p&gt;Given power supplies aren&amp;rsquo;t included with the Pi itself, I knew that powering
my cluster was going to involve spending some additional cheddar!&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.adafruit.com/product/4298?gclid=Cj0KCQjwxb2XBhDBARIsAOjDZ37bms37yK_7GGNQR5pZ6oqvTZTzyaVe16QH8_NynBC47z0yp6GJZc0aAgFnEALw_wcB&#34;&gt;official power supply&lt;/a&gt; goes for around $8 dollars. Knowing that I was going to shoot for four Pis, that was going
to cost me at least $32 dollars. That wasn&amp;rsquo;t even including the money I&amp;rsquo;d need to spend
on zip ties and the time I&amp;rsquo;d need to spend to cable manage. Lastly, I simply
couldn&amp;rsquo;t justify using four outlets!&lt;/p&gt;
&lt;p&gt;This is where &lt;a href=&#34;https://en.wikipedia.org/wiki/Power_over_Ethernet&#34;&gt;Power over Ethernet (PoE)&lt;/a&gt; comes to the rescue. With the correct
networking equipment, enough power to drive the Pis can be delivered over a
simple ethernet cable. No more outlet waste or time spent cable managing! But
there is one catch.&lt;/p&gt;
&lt;p&gt;The Pis themselves can&amp;rsquo;t be powered over ethernet. An &lt;a href=&#34;https://www.adafruit.com/product/5058&#34;&gt;additional hat&lt;/a&gt; needs to
be purchased to achieve this, and they aren&amp;rsquo;t exactly cheap. That said, they
are well worth the price. They are super easy to install on the Pis, plenty of
cases have enough space for them, and they solve the gripes around multiple
power supplies.&lt;/p&gt;
&lt;h4 id=&#34;switch&#34;&gt;Switch&lt;/h4&gt;
&lt;p&gt;When it comes to PoE+ switches, the main thing to focus on is the number of ports.
Obviously, the more ports, the more you will end up spending. No more than four Pis
are needed for my build, so I went with the &lt;a href=&#34;https://www.amazon.com/dp/B08LHL1Q2Z?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&#34;&gt;Netgear GS305P (v2)&lt;/a&gt;. This switch
is &lt;a href=&#34;https://www.fieldengineer.com/blogs/network-switch-managed-vs-unmanaged#:~:text=An%20unmanaged%20switch%20is%20simple,systems%20to%20a%20larger%20network.&#34;&gt;unmanaged&lt;/a&gt; (no smartness) and has 5 ports, one of which being the ingress from your existing internet connection.&lt;/p&gt;
&lt;h4 id=&#34;storage&#34;&gt;Storage&lt;/h4&gt;
&lt;p&gt;Each Pi has a micro SD card slot that acts as onboard storage. For my use cases,
I knew I was going to use a network attached storage (NAS) device to store all
of my data, so using a smaller SD card made sense. I ultimately landed on
snagging some &lt;a href=&#34;https://www.officedepot.com/a/products/8224492/SanDisk-Ultra-PLUS-microSD-Cards-32GB/&#34;&gt;SanDisk 32GB cards&lt;/a&gt;, which will be plenty of space for my needs.&lt;/p&gt;
&lt;h4 id=&#34;cables&#34;&gt;Cables&lt;/h4&gt;
&lt;p&gt;To deliver both power and data to the Pis, I needed some ethernet cables. My
only desire for these was that they were small (also called &lt;a href=&#34;https://www.cables.com/cablesblog/ethernet-vs-patch-cables-whats-the-difference.html&#34;&gt;patch cables&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I found that cables were typically sized in 6 inch increments. Many places
didn&amp;rsquo;t sell patch cables smaller than 1 foot, but I eventually found &lt;a href=&#34;https://www.amazon.com/dp/B06XC5PZLV?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&#34;&gt;some&lt;/a&gt; online
without too much trouble.&lt;/p&gt;
&lt;p&gt;If you are looking for any slack at all, I&amp;rsquo;d recommend getting cables that are about
1 foot in length. Additionally, my cables all weren&amp;rsquo;t the exact same size, so
if sizing consistency is super important, I wouldn&amp;rsquo;t buy the cables I ended up
getting.&lt;/p&gt;
&lt;h4 id=&#34;case&#34;&gt;Case&lt;/h4&gt;
&lt;p&gt;Now that I had picked out all of my parts, I needed a case to put it in. After
a little digging, I stumbled upon &lt;a href=&#34;https://www.uctronics.com/&#34;&gt;Uctronics&lt;/a&gt; which produces many &lt;a href=&#34;https://www.uctronics.com/cluster-and-rack-mount/for-raspberry-pi/cluster.html&#34;&gt;products
specific to Pi clusters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In particular, I wanted something that could not only house my Pis (keeping in
mind they each would have a PoE+ hat installed), but also something that would
also house my PoE+ switch, and provide simple access to the Pis in case I needed
change anything.&lt;/p&gt;
&lt;h1 id=&#34;cost-breakdown&#34;&gt;Cost Breakdown&lt;/h1&gt;
&lt;p&gt;Below outlines the cost of my build (excluding state-side taxes; VAT was included in some
of the purchases). Keep in mind that the chip shortage, high inflation, and
supply chain woes led to higher costs than what was likely achievable historically
for the same parts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Line Item&lt;/th&gt;
&lt;th&gt;Price ($)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/3775&#34;&gt;Raspberry Pi 3B+ (1GB)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$35.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Raspberry Pi 4B (2GB)&lt;/td&gt;
&lt;td&gt;$52.92&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Raspberry Pi 4B (2GB)&lt;/td&gt;
&lt;td&gt;$45.78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Raspberry Pi 4B (2GB)&lt;/td&gt;
&lt;td&gt;$45.79&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/2336&#34;&gt;Crappy Standoffs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$8.16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.mouser.com/ProductDetail/RAF-Electronic-Hardware/M2104-2545-AL?qs=2411ckis64rpgA%252BYlrCb%252Bg%3D%3D&#34;&gt;Good Standoffs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$22.73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.amazon.com/UCTRONICS-Upgraded-Enclosure-Raspberry-Removable/dp/B09JNHKL2N&#34;&gt;Case&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$69.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.amazon.com/dp/B09TP9HT3C?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&#34;&gt;Case Fan Adaptor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$5.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.amazon.com/dp/B08LHL1Q2Z?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&#34;&gt;Switch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$69.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/5058&#34;&gt;PoE+ Hat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/5058&#34;&gt;PoE+ Hat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/5058&#34;&gt;PoE+ Hat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.adafruit.com/product/5058&#34;&gt;PoE+ Hat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$20.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.amazon.com/dp/B06XC5PZLV?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&#34;&gt;Cables&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$14.49&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.officedepot.com/a/products/8224492/SanDisk-Ultra-PLUS-microSD-Cards-32GB/&#34;&gt;Micro SD Card (x2)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$22.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.officedepot.com/a/products/8224492/SanDisk-Ultra-PLUS-microSD-Cards-32GB/&#34;&gt;Micro SD Card (x2)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;$22.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shipping&lt;/td&gt;
&lt;td&gt;$76.76&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;$570.61&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;what-went-not-so-well&#34;&gt;What went not so well&lt;/h1&gt;
&lt;h4 id=&#34;incomplete-case&#34;&gt;Incomplete Case&lt;/h4&gt;
&lt;p&gt;Even though the quality of the case I got was solid, it was annoyingly incomplete.&lt;/p&gt;
&lt;p&gt;The first strike with the case was that it came with fans that could be powered
by the Pi, but didn&amp;rsquo;t include the adaptor necessary. I actually didn&amp;rsquo;t realize
this until I was building the case, as the instruction manual that came with it
referenced the part but it wasn&amp;rsquo;t included. I find it pretty strange that the fans
come with the case but the adaptor isn&amp;rsquo;t included.&lt;/p&gt;
&lt;p&gt;My next gripe was that the case advertises that it is compatible with the
PoE+ hat, but didn&amp;rsquo;t come equipped with standoffs compatible with the case.
Instead it came with screws to secure the Pis to the trays, which would essentially
be all that is necessary if there were no hats installed. I give Uctronics more
of a pass here, given not all builds will use hats, but found the advertising
misleading.&lt;/p&gt;
&lt;p&gt;These shortcomings were the only reason I needed to purchase the standoffs and
the fan adaptor, resulting in a total investment in the case to be ~$85, which
I found to be pretty expensive - more expensive than the &lt;a href=&#34;https://www.amazon.com/Thermaltake-Suppressor-Certified-Computer-CA-1E6-00S1WN-00/dp/B017NWO5V2&#34;&gt;case&lt;/a&gt; I have for my mini-ITX
build.&lt;/p&gt;
&lt;h4 id=&#34;lack-of-pi-availability&#34;&gt;(Lack of) Pi Availability&lt;/h4&gt;
&lt;p&gt;My interest in creating a Raspberry Pi cluster couldn&amp;rsquo;t have been piqued at a
worse time in terms of availability. Due to both &lt;a href=&#34;https://www.raspberrypi.com/news/production-and-supply-chain-update/&#34;&gt;supply constraints and increased
demand&lt;/a&gt;, they have been nearly impossible to comeby.&lt;/p&gt;
&lt;p&gt;After quickly learning that there was no way I was going to be able to purchase
my Pis from &lt;a href=&#34;https://www.adafruit.com/&#34;&gt;Adafruit&lt;/a&gt;, &lt;a href=&#34;https://www.digikey.com/&#34;&gt;Digikey&lt;/a&gt;, or any other retailer I was a previous customer of,
I briefly looked at alternative marketplaces such as Facebook. It was clear that
was going to be a dead-end as well since the only sellers were gouging hard; we&amp;rsquo;re
talking $100+ for model 4B (2G) which &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;normally retailed for $45&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally discovered a website called &lt;a href=&#34;https://rpilocator.com/&#34;&gt;rpilocator&lt;/a&gt;, which was
completely dedicated to help solving this issue. It was through this website that
I was fortunate enough to snag three model 4B (2G) Pis.&lt;/p&gt;
&lt;p&gt;This wasn&amp;rsquo;t a quick process though; it took 2-3 months for the timing to line up right.
It&amp;rsquo;s also worth mentioning that nearly all of these vendor websites had a policy of
one Pi per customer, which made things more difficult. I even saw various vendors
adopt very strict policies that stated only previously existing customers could purchase them, or that
they were no longer going to ship them internationally at all.&lt;/p&gt;
&lt;h4 id=&#34;cost&#34;&gt;Cost&lt;/h4&gt;
&lt;p&gt;Although there were certainly some market elements that were out of my control
that contributed to the overall price (particularly shipping), there was opportunity
to cut costs in several areas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Power Supplies vs. PoE Switch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In total, I spent $150 dollars on the PoE+ specific line items alone. Assuming
you already have an existing switch with 4 available ports, as well as 4 available
power outlets, that would translate to avoiding around $115 of cost, given you&amp;rsquo;d
need to purchase the power supplies instead (around $32 + shipping).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Case&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As previously mentioned, I ended up sinking $85 into my case for the Pi cluster.
Sure it came with some frills, but it&amp;rsquo;s arguable whether they justify the extra bucks.
It would definitely be possible to get away with a $15 dollar case like &lt;a href=&#34;https://vilros.com/products/vilros-acrylic-4-layer-clear-case-box-enclosure-for-raspberry-pi?variant=29408411877470&amp;amp;currency=USD&amp;amp;utm_medium=product_sync&amp;amp;utm_source=google&amp;amp;utm_content=sag_organic&amp;amp;utm_campaign=sag_organic&amp;amp;gclid=EAIaIQobChMI9ZLJzbC7-QIV9AjnCh0WpAUbEAQYASABEgLszPD_BwE&#34;&gt;this one&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;what-went-well&#34;&gt;What went well&lt;/h1&gt;
&lt;h4 id=&#34;customer-service&#34;&gt;Customer Service&lt;/h4&gt;
&lt;h5 id=&#34;international-shipping&#34;&gt;International Shipping&lt;/h5&gt;
&lt;p&gt;Before this project, I really hadn&amp;rsquo;t made an international purchase online before.
For the most part, it was made far easier thanks to rpilocater, as many of the
websites listing inventory were not written in english, and translating the content
was hit or miss. Luckily I was able to stumble my way through check out.&lt;/p&gt;
&lt;p&gt;Waiting for the Pis to be shipped was far harder. In particular, one
of the Pis I bought stated that it had been shipped to the US, but when I looked
up the tracking number on the USPS website, it claimed it had never been received.
Calling the USPS, was less than helpful, but my email interactions with the staff
of the store I bought it from were really great - and most importantly, transparent.
They were knowledgable of the customs shipping process and the state of global
shipping, hopeful I&amp;rsquo;d get it, and remarked that they had just recently gotten
into international shipping. The positivity they had gave me that extra boost
of stamina for the long wait!&lt;/p&gt;
&lt;h5 id=&#34;standoff-snafu&#34;&gt;Standoff Snafu&lt;/h5&gt;
&lt;p&gt;Okay, so now I had the Pis - great! Next it was time to screw in these
bad boys and get them up and running.&lt;/p&gt;
&lt;p&gt;When it came time to install these things into my newly purchased case, I had
bought some standoffs that were a compatible height to support the PoE+ hats I was using. I made
sure that they were M2.5 sized to match the screws provided with the &lt;a href=&#34;https://www.mouser.com/ProductDetail/RAF-Electronic-Hardware/M2104-2545-AL?qs=2411ckis64rpgA%252BYlrCb%252Bg%3D%3D&#34;&gt;case&lt;/a&gt;
itself; check!&lt;/p&gt;
&lt;p&gt;Weirdly, on some of the tray mounts the screws wouldn&amp;rsquo;t turn easily. I naively
thought it they needed an extra &amp;lsquo;oomf&amp;rsquo; to get them to the desired position, so
of course I reached for my pliers!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Don&amp;rsquo;t use pliers to install standoffs into the case.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Without too much additional manpower, I managed to snap off the threaded portion
of a standoff in the tray mount point. Game over! Sure, I could&amp;rsquo;ve just not
screwed in a standoff for that one corner, but then it just wouldn&amp;rsquo;t be complete!
Also, since the GPIO pins are used to connect the hat and the Pi, I didn&amp;rsquo;t
want to have to worry about accidentally squishing that limp corner too hard when
working with it in the future. I had to fix this.&lt;/p&gt;
&lt;p&gt;I reached out to Uctronics support via their website directly. I explained to
them what happened, and they were incredible. They shipped not one, but two replacement
trays all for something that was completely my fault.&lt;/p&gt;
&lt;p&gt;Best of all, thanks to Jeff Geerling and &lt;a href=&#34;https://github.com/geerlingguy/raspberry-pi-dramble/issues/135&#34;&gt;his prior research&lt;/a&gt;, I went ahead and ordered another
set of standoffs with the hope that I&amp;rsquo;d get it right the second time - it worked like a charm!&lt;/p&gt;
&lt;h1 id=&#34;was-the-cost-worth-it&#34;&gt;Was the cost worth it?&lt;/h1&gt;
&lt;p&gt;So was the cost worth it? With so many different Infrastructure as a Service (IaaS)
companies such as Linode, Amazon Web Service (AWS), etc. this is a question
that gets asked more an more.&lt;/p&gt;
&lt;p&gt;To get a sense of this, let&amp;rsquo;s consider what the cost could be if I were to choose
a provider such as Linode to host my cluster instead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: This is a rough comparison, as the exact specs of my build are not
a purchasable configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;contender-1-pi-cluster&#34;&gt;Contender #1: Pi Cluster&lt;/h4&gt;
&lt;p&gt;To kick this off, let&amp;rsquo;s get an idea of the (estimated) all in costs for the Pi cluster.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve already highlighted the hardware costs above, but what about electricity costs?
Since all of the Pis are being powered by a single PoE+ switch, we can compute the
electricity costs by determining the power usage of the switch and how long we plan
to have it running.&lt;/p&gt;
&lt;p&gt;With all ports utilized (which they are), the switch can draw up to 60W of power.
I plan on keeping this cluster up and running all day, everyday. Lastly, we&amp;rsquo;ll
need to factor in average electricity rates for my state.&lt;/p&gt;
&lt;p&gt;With the help of &lt;a href=&#34;https://www.energy.gov/energysaver/maps/appliance-energy-calculator&#34;&gt;this calculator&lt;/a&gt;, it appears that all adds up to ~$131 annually.
Using simple maths, I came up with the following breakdown (rounding up the hardware costs to $550):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;Up Front Cost&lt;/th&gt;
&lt;th&gt;Cost per Month&lt;/th&gt;
&lt;th&gt;After 6 Months&lt;/th&gt;
&lt;th&gt;After 12 Months&lt;/th&gt;
&lt;th&gt;After 18 Months&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Pi Cluster&lt;/td&gt;
&lt;td&gt;~$550&lt;/td&gt;
&lt;td&gt;$11&lt;/td&gt;
&lt;td&gt;$616&lt;/td&gt;
&lt;td&gt;$682&lt;/td&gt;
&lt;td&gt;$748&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;contender-2-linode&#34;&gt;Contender #2: Linode&lt;/h4&gt;
&lt;p&gt;First, let&amp;rsquo;s take a look at some &lt;a href=&#34;https://www.linode.com/products/shared/&#34;&gt;Linode shared hosting&lt;/a&gt; plans:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plan&lt;/th&gt;
&lt;th&gt;CPU Core Count&lt;/th&gt;
&lt;th&gt;Cost per Month&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Linode 2GB&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linode 4GB&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linode 8GB&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;My cluster has 16 CPU cores (each Pi has 4) and a total of 7GB of RAM. To attempt a fair comparison,
I&amp;rsquo;ll break down the comparisons into two sections: matching RAM and matching CPU.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Matching RAM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following configurations achieve 8GB RAM.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;Cost per Month&lt;/th&gt;
&lt;th&gt;After 6 Months&lt;/th&gt;
&lt;th&gt;After 12 Months&lt;/th&gt;
&lt;th&gt;After 18 Months&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4 x Linode 2GB&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;td&gt;$240&lt;/td&gt;
&lt;td&gt;$480&lt;/td&gt;
&lt;td&gt;$720&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2 x Linode 4GB&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;td&gt;$240&lt;/td&gt;
&lt;td&gt;$480&lt;/td&gt;
&lt;td&gt;$720&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 x Linode 8GB&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;td&gt;$240&lt;/td&gt;
&lt;td&gt;$480&lt;/td&gt;
&lt;td&gt;$720&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With this approach, my Pi cluster would prove to be more cost effective after &lt;strong&gt;~19 months&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Matching CPU Core Count&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following configurations achieve 16 CPU cores.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;Cost per Month&lt;/th&gt;
&lt;th&gt;After 6 Months&lt;/th&gt;
&lt;th&gt;After 12 Months&lt;/th&gt;
&lt;th&gt;After 18 Months&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;16 x Linode 2GB&lt;/td&gt;
&lt;td&gt;$160&lt;/td&gt;
&lt;td&gt;$960&lt;/td&gt;
&lt;td&gt;$1920&lt;/td&gt;
&lt;td&gt;$2880&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8 x Linode 4GB&lt;/td&gt;
&lt;td&gt;$160&lt;/td&gt;
&lt;td&gt;$960&lt;/td&gt;
&lt;td&gt;$1920&lt;/td&gt;
&lt;td&gt;$2880&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4 x Linode 8GB&lt;/td&gt;
&lt;td&gt;$160&lt;/td&gt;
&lt;td&gt;$960&lt;/td&gt;
&lt;td&gt;$1920&lt;/td&gt;
&lt;td&gt;$2880&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With this approach, my Pi cluster would prove to be more cost effective after &lt;strong&gt;~3.75 months&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Yes, at least for me it was worth it, but only because I plan on hosting this
cluster in perpituity, want to have the extra control over my data, and want the
performance of dedicated hosting. The experience of learning how to build the
cluster from scratch is also an added educational bonus.&lt;/p&gt;
&lt;p&gt;To be honest though, this experience showed me that it&amp;rsquo;s probably better to at
least start out by using an IaaS platform. Depending on the configuration, you
could achieve a comparable setup that is actually cheaper for 12 or even 18 months.&lt;/p&gt;
&lt;p&gt;I hope you enjoyed following along! Have any ideas for what I should use my
Pi cluster for? Toss me a comment and maybe I&amp;rsquo;ll give it a try. Also, I can&amp;rsquo;t
wait to bring you all along for what I might do with this next - there is so
much out there!&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
