<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on /* Commentary */</title>
    <link>/posts/</link>
    <description>Recent content in Posts on /* Commentary */</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Aug 2022 10:33:48 -0700</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tips for Hotswapping</title>
      <link>/posts/tips-for-hotswapping/</link>
      <pubDate>Mon, 15 Aug 2022 10:33:48 -0700</pubDate>
      
      <guid>/posts/tips-for-hotswapping/</guid>
      <description>When I build mechanical keyboards, I almost always introduce hotswap support. The dogmatic battles wage on over whether or not hotswap boards provide an equivalent or better experience as non-hotswapped versions, but it really just comes down to preference.
Why I Hotswap For me building in hotswap support is a no brainer. Here are some reasons why it is the ideal choice for me.
No Desoldering Switches Obviously, having a hotswap board means that you can easily pop out switches and put in new ones.</description>
      <content>&lt;p&gt;When I build mechanical keyboards, I almost always introduce &lt;a href=&#34;https://deskthority.net/wiki/Hot-swap&#34;&gt;hotswap&lt;/a&gt; support.
The dogmatic battles wage on over whether or not hotswap boards provide an
equivalent or better experience as non-hotswapped versions, but it really just
comes down to preference.&lt;/p&gt;
&lt;h1 id=&#34;why-i-hotswap&#34;&gt;Why I Hotswap&lt;/h1&gt;
&lt;p&gt;For me building in hotswap support is a no brainer. Here are some reasons why
it is the ideal choice for me.&lt;/p&gt;
&lt;h2 id=&#34;no-desoldering-switches&#34;&gt;No Desoldering Switches&lt;/h2&gt;
&lt;p&gt;Obviously, having a hotswap board means that you can easily pop out switches
and put in new ones. There are an insane number of variations of switches out
there, and unless you plan on building a particular configuration and then turning
around and selling it, I&amp;rsquo;d be willing to bet that you would at least entertain
the idea of changing the switches out at some point.&lt;/p&gt;
&lt;p&gt;Some say that instead of hotswapping, you could desolder your switches when you
decided to change it up. They aren&amp;rsquo;t wrong, but let&amp;rsquo;s be real: desoldering sucks.
It requires extra gear (&lt;a href=&#34;https://en.wikipedia.org/wiki/Desoldering&#34;&gt;desoldering&lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/Teenitor-Solder-Sucker-Desoldering-Removal/dp/B0739LXQ6N/ref=zg_bs_8107034011_sccl_2/140-5809656-7869339?pd_rd_i=B0739LXQ6N&amp;amp;psc=1&#34;&gt;pumps&lt;/a&gt;
at least) and takes way more time than popping out the existing switches and
putting new ones in on a hotswap board.&lt;/p&gt;
&lt;p&gt;Most importantly, desoldering requires getting the soldering iron out and heating
up each joint, which could lead to a greater risk of accidental damage.&lt;/p&gt;
&lt;h2 id=&#34;switch-compatibility&#34;&gt;Switch Compatibility&lt;/h2&gt;
&lt;p&gt;Most of the popular switches are compatible with hotswap sockets. You won&amp;rsquo;t feel
limited in your choices purely by making the decision to hotswap.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: Check out my tip below to see how to best determine what switches
will be compatible with your sockets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;iterability&#34;&gt;Iterability&lt;/h2&gt;
&lt;p&gt;I personally like to keep the door open. You never know what new switch may
come out in the future. Also, it will take time for you to try different
switches out to see what you like. You may even change your opinion of a
particular switch over time as you get to use it more and more.&lt;/p&gt;
&lt;p&gt;Take the pressure off of buying the &amp;ldquo;perfect&amp;rdquo; switches. Like I already
mentioned, there are almost too many to count, each having their own
characteristics.&lt;/p&gt;
&lt;h2 id=&#34;board-scarcity&#34;&gt;Board Scarcity&lt;/h2&gt;
&lt;p&gt;It is very common for various build kits to be a part of a group buy. These
group buys can be very infrequent, and they often take many months to fulfill.
As such, it simply isn&amp;rsquo;t a viable option to sell your board with your existing
switches in hopes of getting the same PCB and trying out different ones.&lt;/p&gt;
&lt;p&gt;By hotswapping the PCB, you can keep your board and instead give some new
switches a spin.&lt;/p&gt;
&lt;h1 id=&#34;tips--tricks&#34;&gt;Tips &amp;amp; Tricks&lt;/h1&gt;
&lt;h2 id=&#34;check-switch-compatibility&#34;&gt;Check Switch Compatibility&lt;/h2&gt;
&lt;p&gt;Not all switches can be hotswapped. More specifically, the contacts may not fit
inside the sockets you have chosen.&lt;/p&gt;
&lt;p&gt;Thankfully, the mechanical keyboard community has open sourced maintaining a
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1NhrXy6k88eY9bBqVuPWTAGW2q3GzszJ1JH-zuuGQ-iU/edit#gid=0&#34;&gt;shared spreadsheet&lt;/a&gt; that outlines switch
compatibilities for Mill Max 7305 and 0305 sockets. Kailh MX hotswap sockets
are advertised as being completely compatible for any MX switch.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: I&amp;rsquo;ve hotswapped boards using both Kailh sockets and Mill Max
7305 sockets, and have never had any issues with switch compatibility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to &lt;a href=&#34;https://deskthority.net/wiki/Hot-swap#Hot-swap_switch_sockets&#34;&gt;Deskthority&lt;/a&gt;, there are other kinds of hotswap
(&amp;amp; pin; using them interchangeably) sockets, and to be
totally transparent, I&amp;rsquo;ve never seen these sold from any retailers I&amp;rsquo;ve visited,
nor seen conversation of them where I lurk on the interwebs. As such, I can&amp;rsquo;t
comment on these, besides just suggesting that you&amp;rsquo;ll increase the chance of
success by using sockets others are familiar with and have tested.&lt;/p&gt;
&lt;h2 id=&#34;hold-sockets-using-painters--masking-tape&#34;&gt;Hold Sockets Using Painters / Masking Tape&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/taped-board.jpg&#34;  alt=&#34;Taped PCB&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Sockets taped to PCB.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;The thought of adding sockets to the board can seem daunting at first. For me,
separating the step of inserting the sockets (and holding them in place) from
the soldering work helps with approaching the build in a more modular way.&lt;/p&gt;
&lt;p&gt;For this task, the secret weapon is tape; more specifically, painters tape or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Masking_tape&#34;&gt;masking tape&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/em&gt;: Do not use &lt;a href=&#34;https://en.wikipedia.org/wiki/Scotch_Tape&#34;&gt;Scotch magic tape&lt;/a&gt; or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Box-sealing_tape&#34;&gt;packing tape&lt;/a&gt;. These will melt onto the top of the sockets when
you solder them in. Additionally, both of these kinds of tape easily tear
when attempting to remove it, where painters or masking tape is less likely to
do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Insert sockets one row at a time. When you have finished inserting the sockets
for a row, tear off a single piece of tape that is long enough to cover then
entire row, with at least &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt; inches extra on each end of the board. Using
a single piece of tape makes it super easy to remove the tape after the soldering
is complete. The extra tape on the sides can be used to fold over itself,
essentially creating makeshift &amp;ldquo;tabs&amp;rdquo; that you can grab onto easily when removing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: Creating these tabs on the ends isn&amp;rsquo;t strictly necessary, but
strongly recommended. You&amp;rsquo;ll be scratching at the PCB attempting to lift the
tape otherwise, which can scuff or even damage the board if careless.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When moving on to additional rows, attempt to minimize the amount of overlap
between the tape for each row. You want to make sure that as you peel off one
row, that you don&amp;rsquo;t accidentally peel off the tape for an adjacent row. Going
one row at a time ensures you don&amp;rsquo;t remove tape that you may need to reapply
(if you find a mistake) and makes it easier to flip the board around as you
inspect it.&lt;/p&gt;
&lt;p&gt;As you peel the tape off each row after soldering, test each set of sockets with
a switch to ensure that it inserts properly.&lt;/p&gt;
&lt;h2 id=&#34;buy-a-solid-pair-of-tweezers&#34;&gt;Buy a Solid Pair of Tweezers&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/tweezers.jpeg&#34;  alt=&#34;Curved Point Tip Tweezers&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;VETUS curved point tip tweezers.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;No, don&amp;rsquo;t use any tweezers you might already have laying around. I strongly suggest
getting a pair that have a curved point tip, as it is way more ergonomic for
this use case. They are super affordable; usually &lt;code&gt;$5&lt;/code&gt; to &lt;code&gt;$10&lt;/code&gt; dollars.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BONUS&lt;/strong&gt;&lt;/em&gt;: If you are delicate enough, you can insert the pointed tips of the
tweezers into the socket, and then insert the socket into the board. After some
practice, you can go beast mode and put two sockets on the tweezers at once!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;rig-up-a-raised-working-surface&#34;&gt;Rig Up a Raised Working Surface&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/helping-hands.jpeg&#34;  alt=&#34;Helping Hands Tool&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Helping hands tool.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;When inserting the sockets into the board, I strongly recommend that you
raise the board off of your working surface. You&amp;rsquo;ll benefit from this because
the sockets themselves are taller than the thickness of the PCB - they won&amp;rsquo;t be
able to be inserted fully otherwise.&lt;/p&gt;
&lt;p&gt;The solutions are endless here, but don&amp;rsquo;t overthink it. If you have two sets of
&lt;a href=&#34;https://www.amazon.com/Neiko-01902-Adjustable-Magnifying-Alligator/dp/B000P42O3C/ref=asc_df_B000P42O3C/?tag=hyprod-20&amp;amp;linkCode=df0&amp;amp;hvadid=312096335436&amp;amp;hvpos=&amp;amp;hvnetw=g&amp;amp;hvrand=4691685772583898714&amp;amp;hvpone=&amp;amp;hvptwo=&amp;amp;hvqmt=&amp;amp;hvdev=c&amp;amp;hvdvcmdl=&amp;amp;hvlocint=&amp;amp;hvlocphy=9031554&amp;amp;hvtargid=pla-448870101576&amp;amp;psc=1&#34;&gt;helping hands&lt;/a&gt;, having those set up such that each set holds up one side of the
PCB could do the trick. If you have two spare rolls of tape, you could place each
down on your surface to prop up two opposite sides. You could even snag two
pencils or pens to use instead of the rolls of tape; just make sure they can&amp;rsquo;t
roll!&lt;/p&gt;
&lt;h2 id=&#34;swap-with-intention&#34;&gt;Swap with Intention&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/hotswap-switches.webp&#34;  alt=&#34;Hotswap Switches&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Hotswap switches.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Something that doesn&amp;rsquo;t get emphasized too often is that just because you can
change out your switches, doesn&amp;rsquo;t mean you should do it just to do it. In other
words, the sockets themselves have lifespans that you could technically measure
in the number of swaps, just as you often see the lifespan of switches measured
in keystrokes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: The Kailh hotswap sockets are &lt;a href=&#34;https://divinikey.com/products/kailh-hot-swap-sockets&#34;&gt;rated for 100 swaps&lt;/a&gt;.
There doesn&amp;rsquo;t appear to be explicit mentioning of the lifespan for Mill Max
sockets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My recommendation is to view the ability to hotswap as a &amp;lsquo;future proofing&amp;rsquo;
characteristic, rather than a daily or weekly activity. It keeps the door open
for you to change your switches if you decided to do so, allowing you to
iterate on your keyboard more gracefully over time.&lt;/p&gt;
&lt;h2 id=&#34;buy-extra-sockets&#34;&gt;Buy Extra Sockets&lt;/h2&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/mill-max-sockets.webp&#34;  alt=&#34;Mill Max Sockets&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Mill Max 3305 Sockets&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;The sockets can be tiny (&lt;code&gt;2.67mm&lt;/code&gt; tall for the
&lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;Mill Max 7305&lt;/a&gt; for example). You will almost certainly drop a
couple of these and have no clue where they went.&lt;/p&gt;
&lt;p&gt;In addition to the reality that you may lose some of them, it&amp;rsquo;s also good to
have extras in case you accidentally apply too much solder and get solder inside
the socket itself. Once solder is in the socket, there is no fixing it - consider
it a cost of doing business!&lt;/p&gt;
&lt;p&gt;Lastly, once you do it once, it&amp;rsquo;s likely you&amp;rsquo;ll want to do it again. Maybe you
have a keyboard with number keys, such as a 40%, 60%, 65%, etc. and you later
decided you want a sidecar numpad. Maybe you want to build another board altogether.
You don&amp;rsquo;t want to be halfway through a build and find out you don&amp;rsquo;t enough
sockets.&lt;/p&gt;
&lt;h1 id=&#34;downsides&#34;&gt;Downsides&lt;/h1&gt;
&lt;p&gt;Building a mechanical keyboard with hotswap support isn&amp;rsquo;t a home run; it does
come with some downsides.&lt;/p&gt;
&lt;p&gt;Most notably, it will be more expensive. Mill max sockets aren&amp;rsquo;t cheap, and
depending on the size of your board, you may use a lot of them (two per switch).
Luckily, most online retailers for the sockets provide bulk discount rates. If
you can swing it, I strongly recommend buying enough to take advantage of some
of these discounts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;EXAMPLE&lt;/strong&gt;&lt;/em&gt;: For example, buying &lt;code&gt;499&lt;/code&gt; &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;Mill Max 7305&lt;/a&gt;
sockets on Digikey will cost you &lt;code&gt;$158.02&lt;/code&gt; (&lt;code&gt;$0.31668&lt;/code&gt; each), while &lt;code&gt;500&lt;/code&gt;
will cost &lt;code&gt;$150.79&lt;/code&gt; (&lt;code&gt;$0.30158&lt;/code&gt; each), which is &lt;code&gt;~4.8%&lt;/code&gt; discount. And yep you
read that right, you save &lt;code&gt;$7&lt;/code&gt; even though you are getting one more socket.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next, it will require a little more upfront time investment. You&amp;rsquo;ll be working
with tweezers to insert each socket, taping them in place, and soldering them in.
Overall though, I&amp;rsquo;ve found in practice it doesn&amp;rsquo;t add too much time;
it&amp;rsquo;s the same amount of soldering, so really it comes down to the prep work.&lt;/p&gt;
&lt;p&gt;Lastly, they are a little trickier to solder than the pins on a switch. Depending
on whether you get longer sockets, (like the &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp./0305-2-15-80-47-80-10-0/2639493?utm_adgroup=Terminals%20-%20PC%20Pin%20Receptacles%2C%20Socket%20Connectors&amp;amp;utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Shopping_Product_Connectors%2C%20Interconnects_NEW&amp;amp;utm_term=&amp;amp;utm_content=Terminals%20-%20PC%20Pin%20Receptacles%2C%20Socket%20Connectors&amp;amp;gclid=Cj0KCQjwgO2XBhCaARIsANrW2X0ZAFszkHLN835TWu_m3qZyo4K4jiFYgfiW2spKUK9OuxyNLCD5oZwaAs34EALw_wcB&#34;&gt;0305s&lt;/a&gt;; &lt;code&gt;3.94mm&lt;/code&gt;),
or shorter ones (like the &lt;a href=&#34;https://www.digikey.com/en/products/detail/mill-max-manufacturing-corp/7305-0-15-15-47-27-10-0/1765737&#34;&gt;7305s&lt;/a&gt;; &lt;code&gt;2.67mm&lt;/code&gt;), there is an
increased likelyhood you&amp;rsquo;ll accidentally get solder in the socket itself and
need to replace it altogether.&lt;/p&gt;
&lt;h1 id=&#34;anything-i-missed&#34;&gt;Anything I Missed?&lt;/h1&gt;
&lt;p&gt;These tips &amp;amp; tricks are the ones I have found most impactful during my builds
when it comes to hotswapping. I hope that they will help you as well.&lt;/p&gt;
&lt;p&gt;Building these boards is a bit of a craft. I&amp;rsquo;d love to hear about other approaches
that you might have taken!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Who&#39;s the Boss?</title>
      <link>/posts/docker-swarm-managers/</link>
      <pubDate>Sat, 13 Aug 2022 08:12:39 -0700</pubDate>
      
      <guid>/posts/docker-swarm-managers/</guid>
      <description>Every node in a Docker Swarm plays at least one of two particular roles: worker and/or manager. When you create a new cluster, you start out by creating it with a single node that is both a manager and a worker, and specify an IP address to advertise that manager to other managers as you add them.
Roles So what are the responsibilities of these two roles anyway? How do you know how many managers and workers to deploy in your swarm?</description>
      <content>&lt;p&gt;Every node in a Docker Swarm plays at least one of two particular roles: worker
and/or manager. When you create a new cluster, you start out by creating it with
a single node that is both a manager and a worker, and &lt;a href=&#34;https://docs.docker.com/engine/swarm/admin_guide/#configure-the-manager-to-advertise-on-a-static-ip-address&#34;&gt;specify an IP address
to advertise that manager to other managers&lt;/a&gt; as you add them.&lt;/p&gt;
&lt;h1 id=&#34;roles&#34;&gt;Roles&lt;/h1&gt;
&lt;p&gt;So what are the responsibilities of these two roles anyway? How do you know
how many managers and workers to deploy in your swarm? Let&amp;rsquo;s get into it!&lt;/p&gt;
&lt;h2 id=&#34;managers&#34;&gt;Managers&lt;/h2&gt;
&lt;p&gt;As you might imagine, &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#manager-nodes&#34;&gt;manager nodes&lt;/a&gt; in a Docker Swarm take on
additional cluster management tasks. Such tasks include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maintaining &amp;amp; distributing cluster state across manager nodes in the cluster&lt;/li&gt;
&lt;li&gt;scheduling services to various nodes in the swarm&lt;/li&gt;
&lt;li&gt;serving swarm mode HTTP API endpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;workers&#34;&gt;Workers&lt;/h2&gt;
&lt;p&gt;Intuitively, &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#worker-nodes&#34;&gt;worker nodes&lt;/a&gt; don&amp;rsquo;t perform any of the management
tasks that the manager nodes do; all that stuff is above the pay grade.
Instead, worker nodes are solely responsible for executing service tasks.&lt;/p&gt;
&lt;h2 id=&#34;promotion--demotion&#34;&gt;Promotion &amp;amp; Demotion&lt;/h2&gt;
&lt;p&gt;Roles for nodes can be changed. To &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/node_promote/&#34;&gt;promote&lt;/a&gt; a worker node to
be a manager node, run the following:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker node promote &amp;lt;NODE NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;And to &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/node_demote/&#34;&gt;demote&lt;/a&gt; a node, run this command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker node demote &amp;lt;NODE NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: By default, all manager nodes are also worker nodes. Assuming you
have a cluster that has more than one node, you can prevent any one manager node
from taking on worker node responsibilities by moving it&amp;rsquo;s availability status
to &lt;code&gt;Drain&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;deployment-strategies&#34;&gt;Deployment Strategies&lt;/h1&gt;
&lt;p&gt;Okay, so we&amp;rsquo;ve nailed down the roles that nodes can play within a swarm, but you
may be wondering:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How do I choose which role(s) to assign to a node?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a great question, and one that can have pretty large impact.&lt;/p&gt;
&lt;h2 id=&#34;to-manage-or-not-to-manage&#34;&gt;To Manage or Not to Manage&lt;/h2&gt;
&lt;p&gt;Just like any business, having too many or too little managers can be problematic.
When it comes to provisioning managers in a Docker Swarm, you want to strike the
right balance of &lt;strong&gt;resiliency&lt;/strong&gt; and &lt;strong&gt;performance&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s touch first on resiliency.&lt;/p&gt;
&lt;h3 id=&#34;resiliency&#34;&gt;Resiliency&lt;/h3&gt;
&lt;p&gt;One of the primary reasons why we are using an orchestration engine like Docker
Swarm is so that we can have a degree of fault tolerance. If any particular
node in the swarm decides to take an &amp;ldquo;unnannounced vacation&amp;rdquo;, we should be able
to schedule whatever tasks (containers that comprise a service) to a different,
active node.&lt;/p&gt;
&lt;p&gt;We have to be particularly strategic to provide this fault tolerance when it comes
to managers. After all, they are responsible for taking on some pretty important
and necessary tasks. In order to best understand how many managers we should
deploy, we should quickly touch on the algorithm Docker Swarm uses to ensure
consistent state.&lt;/p&gt;
&lt;h4 id=&#34;raft-consensus-algorithm&#34;&gt;Raft Consensus Algorithm&lt;/h4&gt;
&lt;p&gt;Sounds fancy right?&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://thesecretlivesofdata.com/raft/&#34;&gt;Raft Consensus Algorithm&lt;/a&gt; is essentially an algorithm that
Docker Swarm uses to make sure each manager in the cluster is storing the same
consistent state. The most important thing to note in the context of this discussion
is that manager nodes need to agree on what the state is, and that &amp;ldquo;agreement&amp;rdquo;
is achieved as a function of how many nodes share the same information. If the
majority, also referred to as a &amp;ldquo;quorum&amp;rdquo;, is achieved when new state is proposed,
then it will be distributed to all managers.&lt;/p&gt;
&lt;p&gt;Approaching this mathematically, we can essentially use the following simple
equations to determine achievable fault tolerance and quorum:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;given:
  N = the number of manager nodes in the cluster.

then:
  number of manager nodes that can be down = (N-1)/2
  number of manager nodes to achieve quorum = (N/2)+1
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;EXAMPLE:&lt;/em&gt;&lt;/strong&gt; Assuming we have &lt;code&gt;3&lt;/code&gt; manager nodes (&lt;code&gt;N = 3&lt;/code&gt;) in a cluster of &lt;code&gt;5&lt;/code&gt;
total nodes, we would be able to support &lt;code&gt;1&lt;/code&gt; manager node being down at any
moment in time (&lt;code&gt;(3-1)/2 = 1&lt;/code&gt;). The number of manager nodes to reach quorum
would be &lt;code&gt;2&lt;/code&gt; (&lt;code&gt;(3/2)+1 = 2&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ultimately, the number of managers you deploy in your cluster depends somewhat
on the total number of nodes in your cluster. It is recommended you have at least
&lt;code&gt;3&lt;/code&gt; manager nodes, as such a configuration allows for one manager node to be down.&lt;/p&gt;
&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;
&lt;p&gt;As with much in software design, the resiliency comes at a cost. Since one element
of increasing the resiliency involves introducing redundency, more work is required
to spread information as we introduce more managers. Adding more manager nodes,
means more managers are needed to meet quorum.&lt;/p&gt;
&lt;p&gt;When it comes to Docker Swarm, it&amp;rsquo;s generally &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/nodes/#manager-nodes&#34;&gt;not recommended to have any more
than &lt;code&gt;7&lt;/code&gt; manager nodes&lt;/a&gt;. Such a configuration would allow &lt;code&gt;3&lt;/code&gt;
managers to be simultaneously down at any moment and require &lt;code&gt;4&lt;/code&gt; nodes to reach
quorum.&lt;/p&gt;
&lt;h3 id=&#34;unreachable-quorum&#34;&gt;Unreachable Quorum&lt;/h3&gt;
&lt;p&gt;In the event that the number of manager nodes simultaneously down exceeds the
allowable fault tolerance, the state of the cluster is not allowed to change.
New tasks cannot be scheduled, and the existing tasks cannot be rebalanced to
other nodes if required. The following error will be returned when a management
operation is attempted:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error response from daemon: rpc error: code = 4 desc = context deadline exceeded
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The ideal way to recover here is to get manager nodes back online. If for some
reason the managers can&amp;rsquo;t be brought back online, a new cluster will need to
be provisioned. This can be performed using the following command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm init --force-new-cluster --advertise-addr &amp;lt;IP&amp;gt;:2377
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Make sure to replace &lt;code&gt;&amp;lt;IP&amp;gt;&lt;/code&gt; with the IP address or DNS resolvable name of the
host you desire to be the initial manager of this new cluster.&lt;/p&gt;
&lt;h4 id=&#34;workers-get-shit-done&#34;&gt;Workers Get Shit Done&lt;/h4&gt;
&lt;p&gt;Compared to manager nodes, worker nodes are far simpler. Since they are
designated for executing the tasks for the swarm, the main deployment concerns
are simply ensuring that there are enough workers to balance the load.&lt;/p&gt;
&lt;p&gt;To join an existing swarm cluster as a worker node, run the following commands
to retrieve the worker join token:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;3&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;3&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm join-token worker
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Assuming the above command provided this output:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker swarm join \
  --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \
  192.168.99.100:2377
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The final step would be to run that command:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;4&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;4&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;
$ docker swarm join \
  --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \
  192.168.99.100:2377
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: When adding workers to accommodate for expected or current
workloads, make sure to take the various resource related requirements that
may be specified for a particular service. Remember that workers that
don&amp;rsquo;t meet those specified requirements will not be scheduled to execute
those tasks.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>You Had One Job Portainer Console!</title>
      <link>/posts/portainer-console-issue/</link>
      <pubDate>Fri, 12 Aug 2022 22:04:10 -0700</pubDate>
      
      <guid>/posts/portainer-console-issue/</guid>
      <description>I use Portainer as my central hub for managing my Docker Swarm that powers my home lab, and it&amp;rsquo;s awesome.
One of the many features it includes is the ability to open up a &amp;lsquo;console&amp;rsquo; to any container (task) running in the swarm - think basically a UI for docker exec -it &amp;lt;CONTAINER ID&amp;gt; /bin/bash. It even provides the affordance of specifying a different user (other than the default of root) or shell (other than the default of bash).</description>
      <content>&lt;p&gt;I use &lt;a href=&#34;https://www.portainer.io/&#34;&gt;Portainer&lt;/a&gt; as my central hub for managing my Docker Swarm
that powers my home lab, and it&amp;rsquo;s awesome.&lt;/p&gt;
&lt;p&gt;One of the many features it includes is the ability to open up a &amp;lsquo;console&amp;rsquo; to any
container (task) running in the swarm - think basically a UI for
&lt;code&gt;docker exec -it &amp;lt;CONTAINER ID&amp;gt; /bin/bash&lt;/code&gt;. It even provides the affordance of
specifying a different user (other than the default of &lt;code&gt;root&lt;/code&gt;) or shell (other
than the default of &lt;code&gt;bash&lt;/code&gt;).&lt;/p&gt;
&lt;h1 id=&#34;connecting&#34;&gt;Connecting&amp;hellip;&lt;/h1&gt;
&lt;p&gt;One day, I went to hop into a console session on one of my containers, but instead
of the shell launching, Portainer seemed to be stuck when attempting to connect.&lt;/p&gt;

  &lt;figure class=&#34;center&#34; &gt;
    &lt;img src=&#34;/img/portainer-connecting-issue.png&#34;  alt=&#34;Portainer Connecting Issue&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Screenshot of the issue.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;What gives? No error toasts appear in the top right to examine as one might expect.
Time to dig deeper.&lt;/p&gt;
&lt;p&gt;Once I landed in the logs, I tripped over some of these:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

level=info msg=&amp;#34;2022/08/13 05:06:35 websocketproxy: Error when copying from backend to client: websocket: close 1006 (abnormal closure): unexpected EOF&amp;#34;
level=info msg=&amp;#34;2022/08/13 05:07:01 websocketproxy: Error when copying from backend to client: websocket: invalid close code&amp;#34;

...

level=info msg=&amp;#34;2022/08/13 05:12:22 websocketproxy: couldn&amp;#39;t upgrade websocket: the client is not using the websocket protocol: &amp;#39;upgrade&amp;#39; token not found in &amp;#39;Connection&amp;#39; header&amp;#34;
level=info msg=&amp;#34;2022/08/13 05:12:40 websocketproxy: couldn&amp;#39;t upgrade websocket: the client is not using the websocket protocol: &amp;#39;upgrade&amp;#39; token not found in &amp;#39;Connection&amp;#39; header&amp;#34;

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Interesting. Seems Portainer is attempting to make use of some websockets but can&amp;rsquo;t.&lt;/p&gt;
&lt;h1 id=&#34;root-cause--fix&#34;&gt;Root Cause + Fix&lt;/h1&gt;
&lt;p&gt;To take a half a step back real quick, it&amp;rsquo;s worth mentioning that I use nginx as
my reverse proxy of choice for my swarm. Essentially it runs as a container
within the swarm and forwards all traffic on ports &lt;code&gt;80&lt;/code&gt; (http) or &lt;code&gt;443&lt;/code&gt; (https)
to other services. One of these services is Portainer.&lt;/p&gt;
&lt;p&gt;As it turns out, my nginx configuration did not support websockets. I had to make
the following changes:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;diff&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-diff&#34; &gt;&lt;code&gt;
server {
	server_name ~^sweet.domain.com$;

	listen 443 ssl;
	ssl_certificate /ssl/cert.pem;
	ssl_certificate_key /ssl/key.pem;

	access_log /var/log/nginx/data-access.log combined;

	location / {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass https://sweet_swarm_task:9443;
&amp;#43;		proxy_http_version 1.1;
&amp;#43;		proxy_set_header Upgrade $http_upgrade;
&amp;#43;		proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
	}
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;I definitely wasn&amp;rsquo;t the only one to make this mistake; this
&lt;a href=&#34;https://github.com/portainer/portainer/issues/6353&#34;&gt;GitHub issue&lt;/a&gt; being one example! Although, reading through
some of the conversation retriggered some interest in exploring
&lt;a href=&#34;https://nginxproxymanager.com/&#34;&gt;Nginx Proxy Manager&lt;/a&gt; once again - perhaps more on that
in a future post.&lt;/p&gt;
&lt;h4 id=&#34;breakdown&#34;&gt;Breakdown&lt;/h4&gt;
&lt;p&gt;In case you are saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hold up, what are these changes?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got you covered. Let&amp;rsquo;s break it down.&lt;/p&gt;
&lt;h5 id=&#34;proxy_http_version-11&#34;&gt;&lt;code&gt;proxy_http_version 1.1;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Indicates that the HTTP version should be set to &lt;code&gt;1.1&lt;/code&gt;. Connection upgrades
can only be performed for &lt;code&gt;1.1&lt;/code&gt;, and not &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;
(&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism#upgrading_to_a_websocket_connection&#34;&gt;explicitly disallowed&lt;/a&gt;).&lt;/p&gt;
&lt;h5 id=&#34;proxy_set_header-upgrade-http_upgrade&#34;&gt;&lt;code&gt;proxy_set_header Upgrade $http_upgrade;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the value of the &lt;code&gt;Upgrade&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&#34;&gt;header&lt;/a&gt; to have the value
provided (see &lt;a href=&#34;%5Bhttps://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_%5D&#34;&gt;&lt;code&gt;$http_*&lt;/code&gt; nginx variables&lt;/a&gt;). Clients utilize
this header to indicate that they wish to upgrade the connection from a
particular version of HTTP (1.1 for example) to another version, or to a websocket
connection.&lt;/p&gt;
&lt;h5 id=&#34;proxy_set_header-connection-upgrade&#34;&gt;&lt;code&gt;proxy_set_header Connection &amp;quot;upgrade&amp;quot;;&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;Connection&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Connection&#34;&gt;header&lt;/a&gt; to have a value of
&lt;code&gt;&amp;quot;upgrade&amp;quot;&lt;/code&gt;, which indicates that nginx needs to process the &lt;code&gt;Upgrade&lt;/code&gt;
&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&#34;&gt;header&lt;/a&gt; before forwarding. This header must be sent whenever
the &lt;code&gt;Upgrade&lt;/code&gt; is sent.&lt;/p&gt;
&lt;h1 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve only scratched the surface on this stuff. If you are interesting in reading
further, check out &lt;a href=&#34;https://www.nginx.com/blog/websocket-nginx/&#34;&gt;this awesome post&lt;/a&gt; on the
&lt;a href=&#34;https://www.nginx.com/blog&#34;&gt;nginx blog&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tale of the Unknown GitHub Secrets</title>
      <link>/posts/github-environments-and-secrets/</link>
      <pubDate>Wed, 10 Aug 2022 20:43:31 -0700</pubDate>
      
      <guid>/posts/github-environments-and-secrets/</guid>
      <description>When building out the deployment pipeline for this blog, I had my first run-in with Github Actions. In particular, my goal was to automatically generate a new Docker image when I push changes to the GitHub repository containing the source files, and push that Docker image to my corresponding DockerHub repository.
What secrets? In order to achieve this, I reached for docker/login-action. This straightforward action essentially takes the credentials provided to it and logs into DockerHub using those credentials.</description>
      <content>&lt;p&gt;When building out the deployment pipeline for this blog, I had my first run-in
with &lt;a href=&#34;https://github.com/features/actions&#34;&gt;Github Actions&lt;/a&gt;. In particular, my goal was to automatically generate a
new Docker image when I push changes to the GitHub repository containing
the source files, and push that Docker image to my corresponding DockerHub repository.&lt;/p&gt;
&lt;h1 id=&#34;what-secrets&#34;&gt;What secrets?&lt;/h1&gt;
&lt;p&gt;In order to achieve this, I reached for &lt;a href=&#34;https://github.com/marketplace/actions/docker-login&#34;&gt;&lt;code&gt;docker/login-action&lt;/code&gt;&lt;/a&gt;. This straightforward
action essentially takes the credentials provided to it and logs into DockerHub
using those credentials.&lt;/p&gt;
&lt;p&gt;I went ahead and bootstrapped a &lt;a href=&#34;https://github.com/fr33r/.com-blog/blob/main/.github/workflows/docker.yml&#34;&gt;workflow configuration&lt;/a&gt; based on the example
provided in the &lt;a href=&#34;https://github.com/marketplace/actions/docker-login&#34;&gt;documentation for the DockerHub registry&lt;/a&gt;, and created the
&lt;code&gt;DOCKERHUB_USERNAME&lt;/code&gt; and &lt;code&gt;DOCKERHUB_PASSWORD&lt;/code&gt; secrets in GitHub.&lt;/p&gt;
&lt;p&gt;Then it was time to test. I went ahead and pushed some changes to trigger the
workflow, and then&amp;hellip;&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;output&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-output&#34; &gt;&lt;code&gt;
Run docker/login-action@v2
  with:
    ecr: auto
    logout: true
Error: Username and password required
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Hmm, strange.&lt;/p&gt;
&lt;p&gt;I know I created the secrets and &lt;a href=&#34;https://github.com/fr33r/.com-blog/blob/352aa1c2bc88345e05efe3f9174643f0789e2abf/.github/workflows/docker.yml#L25-L26&#34;&gt;specified them in the workflow configuration&lt;/a&gt;.
Why didn&amp;rsquo;t they come through? Is this a generic error message, or does it truly
get displayed when the credentials are missing? Did I forget to add values for the
secrets? Do the keys for the secrets line up in the workflow configuration?&lt;/p&gt;
&lt;p&gt;To help me find some answers, I reran the failed workflow with debug logs enabled:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;output&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-output&#34; &gt;&lt;code&gt;
##[debug]Evaluating condition for step: &amp;#39;Login to DockerHub&amp;#39;
##[debug]Evaluating: success()
##[debug]Evaluating success:
##[debug]=&amp;gt; true
##[debug]Result: true
##[debug]Starting: Login to DockerHub
##[debug]Register post job cleanup for action: docker/login-action@v2
##[debug]Loading inputs
##[debug]Evaluating: secrets.DOCKERHUB_USERNAME
##[debug]Evaluating Index:
##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_USERNAME&amp;#39;
##[debug]=&amp;gt; null
##[debug]Result: null
##[debug]Evaluating: secrets.DOCKERHUB_TOKEN
##[debug]Evaluating Index:
##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_TOKEN&amp;#39;
##[debug]=&amp;gt; null
##[debug]Result: null
##[debug]Loading env
Run docker/login-action@v2
  with:
    ecr: auto
    logout: true
::save-state name=isPost::true
##[debug]Save intra-action state isPost = true
::save-state name=registry::
##[debug]Save intra-action state registry = 
::save-state name=logout::true
##[debug]Save intra-action state logout = true
Error: Username and password required
##[debug]Node Action run completed with exit code 1
##[debug]Finishing: Login to DockerHub
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Okay. So the workfow is attempting to resolve the secrets, but it seems it is printing
out &lt;code&gt;null&lt;/code&gt; for both the &lt;code&gt;DOCKERHUB_USERNAME&lt;/code&gt; and &lt;code&gt;DOCKERHUB_TOKEN&lt;/code&gt;. I remember seeing
&lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets#accessing-your-secrets&#34;&gt;something&lt;/a&gt; about values of secrets being redacted from action output, but does that mean
that it will print &lt;code&gt;null&lt;/code&gt;? That can&amp;rsquo;t be right&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;root-cause--fix&#34;&gt;Root Cause + Fix&lt;/h1&gt;
&lt;p&gt;After spending far too much time turning over these stones, I finally discovered the
concept I was lacking knowledge on: GitHub environments.&lt;/p&gt;
&lt;p&gt;Being totally new to setting up secrets in GitHub actions, I had missed the &lt;a href=&#34;https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment&#34;&gt;documentation&lt;/a&gt;
that described how workflows interacted with GitHub environments. Equipped with this ignorance,
I proceeded to create the GitHub secrets as environment secrets, not repository
secrets. Combine this naiveness with the documentation provided for
&lt;code&gt;docker/login-action&lt;/code&gt;, which outlines examples that implicitly assumes
repository level secrets are used, and the end result is that the workflow
configuration I created couldn&amp;rsquo;t access the secrets I had created.&lt;/p&gt;
&lt;p&gt;There were two solutions for here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make my workflow configuration environment aware, or&lt;/li&gt;
&lt;li&gt;remove the existing secrets I had created and add them as repository level secrets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given I had created the environment without much intention, and because I currently
don&amp;rsquo;t have much of a use case for supporting multiple environments for this project,
I chose to go with the latter approach. Once the credentials were moved (and the old
ones removed), it worked like a charm!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Had I chosen to go with the first option, I would&amp;rsquo;ve added an &lt;code&gt;environment&lt;/code&gt;
key within the workflow configuration, as outlined in &lt;a href=&#34;https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment&#34;&gt;this&lt;/a&gt; GitHub documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;how-could-this-be-better&#34;&gt;How could this be better?&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s clear that the root cause was my user error here. However, I definitely
think it is worth highlighting a couple of opportunities for improvement that
could prevent others from having to climb out of the same trap.&lt;/p&gt;
&lt;h4 id=&#34;better-error-messaging&#34;&gt;Better Error Messaging&lt;/h4&gt;
&lt;p&gt;Error messages could always be better right? When it comes to improving the feedback
loop, the first thing I identify is whether or not the application generating the error
message has enough information to actually generate a more descriptive message and/or
a suggested fix.&lt;/p&gt;
&lt;p&gt;In this situation, that is totally the case. It was clear here that the secrets being
referenced did in fact exist, but just in an environment and not at the repository level.
GitHub even has &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets#naming-your-secrets&#34;&gt;documentation&lt;/a&gt; on how two secrets with the same key but exist in both levels
are treated, so awareness of secrets in both places is already being handled to some
degree.&lt;/p&gt;
&lt;p&gt;To illustrate, imagine the debug logs had entries like this instead:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..Evaluating String:
##[debug]..=&amp;gt; &amp;#39;DOCKERHUB_TOKEN&amp;#39;
##[debug]..Checking repository secrets
##[debug]=&amp;gt; null
##[debug]..Checking environment: staging
##[debug]=&amp;gt; null
##[debug]..Checking environment: production
##[debug]...Match found. Did you mean to reference an environment secret instead?

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this verbiage, there is no need to dive in for triaging. Users would
know immediately why their secrets were not accessible.&lt;/p&gt;
&lt;p&gt;In a similar vein, it&amp;rsquo;s worth asking the question whether referencing secrets
when there are 0 secrets detected is ever an expected scenario. In this circumstance,
the workflow couldn&amp;rsquo;t find any secrets, despite both of them being listed. Perhaps
an error message indicating the following would be beneficial:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...

##[debug]..Evaluating secrets:
##[debug]..=&amp;gt; Object
##[debug]..No secrets exist

...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This message would at least be more straightforward that no secrets are detected,
eliminating the additional steps the user would need to take to understand why
&lt;code&gt;null&lt;/code&gt; is being passed around.&lt;/p&gt;
&lt;h4 id=&#34;comprehensive-documentation&#34;&gt;Comprehensive Documentation&lt;/h4&gt;
&lt;p&gt;This one may be more of a reach, but it&amp;rsquo;s worth calling out that the documentation
for the &lt;code&gt;docker/login-action&lt;/code&gt; assumes that environments aren&amp;rsquo;t being used. I don&amp;rsquo;t
fault the maintainers for thinking it wouldn&amp;rsquo;t be necessary to address explicitly -
after all, GitHub environments is it&amp;rsquo;s own wide-spread feature, and it shouldn&amp;rsquo;t
be necessary for every maintainer of a GitHub action to eductate users of other
GitHub features.&lt;/p&gt;
&lt;p&gt;However, the maintainers &lt;em&gt;are&lt;/em&gt; responsible for writing the code to generate
error messages for their action. Their documentation doesn&amp;rsquo;t outline the potential
error that can be thrown, or potential troubleshooting steps.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
